[1,["18EsvEKhZEd4qddMxdj258","ee5oeNSF1MAajucmngqhq4@6c48a","73cywgPbFJWbPFbgbiw1YD@f9941","3aKJnfvm1HvYD7O0DeGzRI@f9941","74A0CgnhxN15YbLceABOwf","acdeXgRiRErpOPlWQgqxc0@6c48a","b0p8wTYgtGkKkdcBJdwQ4Y","d0EWHeI1VG5b6fXppeRvQ6@6c48a","d1NGQ2rJZCcbhjH0/erZWw","b1ozj9sDtI2K0J0qadvtdH@f9941","a9I+RpiUpMl74Byzf56NJS@f9941","31t7ld+ytMJYMVwyyFAAff@f9941","267eCOK4pJU5xF9sEQ/MNs@f9941","70cXWzGiZFea3hkLa0rb3C","6bpk5ArxZJdp5te+BUiv18@1f586","69R67CbVdFsrdYcUIQO1xD","20xNXcvj9A041aipvrZ8KK@1f586","21o7LnkpJAkaGJISPcy/+V@f9941","30T/VMNixI6Z6EeWjp1xyl@f9941","e66NIO5ZtLELAwEb8nKfES@6c48a","75erc0cVNIqaDEltMBke6p","4fdGvjFmdMgIg5qlOy+3Hf@f9941","e9T4jnpYJGJ65GACXEs0jU","25q7yVjWVDaq1QirGUm4+a@0692d","beoTWf9xhGl6XHcJM9bJ8h","609xlc7CpF67qUiVX2DoHQ","b99FnrCtNI9KsJR5KnWm6I","bdBmZH5C5EFr2iTaC+zmVr@f9941","24o0gbkRpGSIXW1ILgtxe6@f9941","6bpk5ArxZJdp5te+BUiv18@a04af","6bpk5ArxZJdp5te+BUiv18@438fe","20xNXcvj9A041aipvrZ8KK@021da","20xNXcvj9A041aipvrZ8KK@438fe","beuwv8istJmLhQ4Tn6JggZ","c0qvCRzeVAZ5vkq82A008S@6c48a","a3zQCfCrBCDZJ4uf2rk5u8","e8teduLM9B+6400C3D4Gw0@f9941","9d+gK/p9ZMWqdzj3aMJ/eA@f9941","1dpWQN5klGE7MSbefGVCYk","e4P25ghD5Me5IyvYxWnK/K@f9941","a4QrZbYB9MjL+yFouATPkI","bbdvELmvxEX717koU1QUv1","26R1NwvGhG5qN+9xFzhlGZ@f9941","81RBf3mxZA1YCae3kIJkEg@f9941"],["node","_parent","_spriteFrame","targetInfo","_cpuMaterial","_mainTexture","target","_effectAsset","source","_particleSystem","_defaultClip","mainTexture","root","_mesh","data","ani","asset","_skeleton","maskTexture","noiseTexture","_target","txtNum","_normalSprite","_customMaterial"],[["cc.Node",["_name","_layer","_objFlags","__editorExtras__","_active","_prefab","_parent","_lpos","_euler","_children","_lrot","_components","_lscale"],-2,4,1,5,5,2,5,12,5],["cc.Node",["_name","_layer","_components","_prefab","_parent","_lpos","_children","_lrot","_euler","_lscale"],1,9,4,1,5,2,5,5,5],["cc.Sprite",["_sizeMode","_isTrimmedMode","_type","_name","node","__prefab","_spriteFrame","_color","_customMaterial"],-1,1,4,6,5,6],["cc.RealKeyframeValue",["rightTangent","leftTangent","interpolationMode","rightTangentWeight","leftTangentWeight","value"],-3],["cc.UITransform",["_name","node","__prefab","_contentSize","_anchorPoint"],2,1,4,5,5],["cc.Widget",["_alignFlags","_top","_name","_left","_right","_alignMode","_originalWidth","_originalHeight","_enabled","node","__prefab"],-6,1,4],["cc.CurveRange",["mode","constantMin","constantMax","constant","multiplier","spline"],-2,4],["cc.Node",["_name","_layer","_children","_prefab","_lpos","_lrot","_euler","_parent"],1,12,4,5,5,5,1],["cc.Node",["_name","_layer","_parent","_children","_prefab","_lpos","_lrot","_euler","_lscale"],1,1,9,4,5,5,5,5],["cc.TargetOverrideInfo",["propertyPath","target","targetInfo","source","sourceInfo"],2,1,4,1,4],["cc.ShapeModule",["_enable","_shapeType","radius","length","_angle","emitFrom","arcMode","arcSpeed","_scale"],-4,4,5],["cc.VelocityOvertimeModule",["_enable","space","x","y","z","speedModifier"],1,4,4,4,4],["cc.Material",["_name","_states","_defines","_techIdx","_props"],-1,12],["cc.PrefabInstance",["fileId","prefabRootNode","propertyOverrides","mountedChildren"],2,1,9,9],["cc.Animation",["playOnLoad","node","__prefab","_clips","_defaultClip"],2,1,4,3,6],["cc.ParticleSystem",["duration","loop","_capacity","_simulationSpace","node","__prefab","_materials","startColor","startSizeX","startSizeY","startSizeZ","startSpeed","startRotationX","startRotationY","startRotationZ","startDelay","startLifetime","gravityModifier","rateOverTime","rateOverDistance","_colorOverLifetimeModule","_shapeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule","_noiseModule","_trailModule","renderer","bursts"],-1,1,4,12,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,9],["cc.ParticleSystem",["_capacity","_simulationSpace","startSize3D","startRotation3D","duration","loop","node","__prefab","_materials","startColor","startSizeX","startSizeY","startSizeZ","startSpeed","startRotationX","startRotationY","startRotationZ","startDelay","startLifetime","gravityModifier","rateOverTime","rateOverDistance","_colorOverLifetimeModule","_shapeModule","_sizeOvertimeModule","_velocityOvertimeModule","_forceOvertimeModule","_limitVelocityOvertimeModule","_rotationOvertimeModule","_textureAnimationModule","_noiseModule","_trailModule","renderer","bursts"],-3,1,4,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,9],["cc.GradientRange",["_mode","colorMin","colorMax"],2,5,5],["cc.SizeOvertimeModule",["_enable","size","x","y","z"],2,4,4,4,4],["cc.TextureAnimationModule",["_enable","_numTilesX","_numTilesY","cycleCount","frameOverTime","startFrame"],-1,4,4],["cc.TrailModule",["lifeTime","widthRatio","colorOverTrail","colorOvertime","_particleSystem"],3,4,4,4,4,1],["cc.Label",["_string","_actualFontSize","_fontSize","_name","_lineHeight","_cacheMode","node","__prefab"],-3,1,4],["cc.Material",["_name","_props","_states","_defines"],-1],["cc.Mesh",["_native","_hash","_struct"],1,11],["cc.Prefab",["_name"],2],["cc.CompPrefabInfo",["fileId"],2],["cc.BlockInputEvents",["node","__prefab"],3,1,4],["cc.PrefabInfo",["fileId","instance","root","asset","targetOverrides","nestedPrefabInstanceRoots"],1,1,1,9,2],["cc.PrefabInfo",["fileId","targetOverrides","nestedPrefabInstanceRoots","root","instance","asset"],0,1,4,6],["cc.PrefabInfo",["fileId","instance","targetOverrides","nestedPrefabInstanceRoots","root","asset"],-1,1,1],["cc.TargetInfo",["localID"],2],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,1],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,1,8],["CCPropertyOverrideInfo",["value","propertyPath","targetInfo"],1,4],["CCPropertyOverrideInfo",["propertyPath","targetInfo","value"],2,4,8],["cc.MountedChildrenInfo",["targetInfo","nodes"],3,4,2],["cc.Button",["_transition","node","__prefab","clickEvents","_normalColor","_target","_normalSprite"],2,1,4,9,5,1,6],["cc.ClickEvent",["_componentId","handler","target"],1,1],["2a13cx4bHtFXqrrQXCxPbSy",["node","__prefab","ani"],3,1,4,1],["cc.UIMeshRenderer",["node","__prefab"],3,1,4],["cc.ColorOvertimeModule",["color"],3,4],["cc.RealCurve",["_times","_values"],2,9],["cc.ForceOvertimeModule",["x","y","z"],3,4,4,4],["cc.LimitVelocityOvertimeModule",["limitX","limitY","limitZ","limit"],3,4,4,4,4],["cc.RotationOvertimeModule",["x","y","z"],3,4,4,4],["cc.NoiseModule",[],3],["cc.ParticleSystemRenderer",["_cpuMaterial","_mainTexture"],3,6,6],["cc.SkinnedMeshRenderer",["node","__prefab","_materials","bakeSettings","_skinningRoot","_mesh","_skeleton"],3,1,4,3,4,1,6,6],["cc.ModelBakeSettings",[],3],["20039gcGzFNu5iBC0qjuHn8",["node","__prefab","aryPlayerWait","aryPlayer","aryPlayerName","aryPlayerHead","aryHead","leftNode","rightNode","btnClose","girlNode","boyNode"],3,1,4,2,2,2,2,3,1,1,1,1,1],["cc.SkeletalAnimation",["playOnLoad","node","__prefab","_clips"],2,1,4,3],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.MeshRenderer",["node","__prefab","_materials","bakeSettings","_mesh"],3,1,4,3,4,6],["cc.Burst",["count"],3,4]],[[6,1],[29,0,1,2,3,4,5,5],[25,0,2],[0,0,1,6,9,5,7,10,8,3],[6,3,2],[30,0,2],[4,1,2,3,1],[17,1],[3,2,5,3],[8,0,1,2,3,4,5,6,7,3],[6,0,1,2,4],[41,0,1,2],[4,1,2,1],[2,4,5,6,1],[6,0,5,2],[0,0,1,6,5,7,10,8,3],[1,0,1,4,2,3,5,3],[33,0,1,2,3],[39,0,1,1],[31,0,1,2,3],[3,2,0,3,1,4,6],[40,0,1],[42,0,1,2,1],[43,0,1,2,3,1],[44,0,1,2,1],[45,1],[46,0,1,1],[0,0,1,6,5,7,8,3],[0,0,1,6,5,7,3],[0,0,1,9,5,7,10,8,3],[0,0,1,6,5,7,10,12,8,3],[4,0,1,2,3,2],[32,0,1,2,2],[18,0,1,2,3,4,2],[19,4,5,1],[20,0,1,2,3,4,1],[1,0,1,6,2,3,5,3],[0,0,6,11,5,7,10,8,2],[0,0,1,6,11,5,7,3],[1,0,4,6,2,3,2],[1,0,1,4,2,3,3],[1,0,4,2,3,5,7,9,8,2],[8,0,1,2,3,4,5,3],[9,0,3,4,1,2,2],[34,0,1,2,2],[15,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,1],[6,0,4,5,3],[10,0,2,3,4,7,5],[3,2,5,0,1,5],[11,0,2,3,4,5,2],[48,1],[12,0,3,1,2,4,5],[24,0,2],[1,0,1,4,6,2,3,5,3],[1,0,1,4,6,2,3,3],[35,0,1,1],[2,0,1,4,5,6,3],[53,0,1],[12,0,1,2,4,4],[0,2,3,6,5,3],[0,0,4,1,6,9,11,5,7,12,4],[0,0,1,6,9,5,10,8,3],[0,0,1,6,9,5,7,3],[0,0,6,11,5,7,2],[1,0,4,2,3,5,7,8,2],[1,0,4,2,3,5,2],[1,0,6,2,3,2],[7,0,1,2,3,4,5,6,3],[7,0,1,7,2,3,3],[5,2,8,0,3,4,5,9,10,7],[28,0,1,2,3,4,5,4],[9,0,3,1,2,2],[2,0,1,4,5,3],[2,4,5,7,6,1],[14,0,1,2,3,4,2],[14,1,2,3,4,1],[38,0,1,2,1],[16,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,33,22,23,24,25,26,27,28,29,30,31,32,5],[17,0,1,2,2],[10,0,1,7,8,3],[10,1,5,6,7,4],[18,1,2,3,4,1],[3,2,5,0,3,1,4,7],[3,0,3,1,4,5],[3,5,0,3,1,4,6],[11,0,1,2,3,4,5,3],[11,2,3,4,5,1],[19,0,1,2,3,4,5,5],[20,0,1,2,3,1],[47,0,1,2,3,4,5,6,1],[21,3,0,1,2,4,5,6,7,7],[50,0,1,2,3,2],[52,0,1,2,3,4,1],[22,0,1,2,3,5],[23,0,1,2,3],[0,0,1,9,11,5,3],[0,0,1,11,5,7,3],[0,0,1,6,9,5,7,10,12,8,3],[1,0,1,4,2,3,7,8,3],[1,0,1,4,2,3,7,9,8,3],[1,0,4,2,3,5,9,2],[7,0,1,7,2,3,4,5,6,3],[8,0,1,2,3,4,5,6,8,7,3],[4,1,2,3,4,1],[4,0,1,2,2],[5,0,6,7,9,10,4],[5,0,3,1,9,10,4],[5,0,4,1,9,10,4],[5,2,0,1,5,9,10,5],[26,0,1,1],[27,0,1,2,3,4,5,3],[9,0,1,2,2],[13,0,1,2,2],[13,0,1,3,2,2],[2,2,4,5,6,2],[2,3,0,1,4,5,6,4],[2,2,0,4,5,6,3],[2,4,5,7,8,6,1],[36,0,1,2,3,4,5,6,2],[37,0,1,2,3],[15,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,31,20,21,22,23,24,25,26,27,28,29,30,5],[16,0,1,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,3],[49,0,1,2,3,4,5,6,7,8,9,10,11,1],[21,0,1,2,6,7,4],[51,0,1,2,4]],[[[[51,"sharpCircle","1",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[11,7],[1,8]],[[[93,"add",[{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{"blendDst":1}]}}],[{"USE_TEXTURE":true}]]],0,0,[0],[7],[25]],[[[94,".bin",3540990502,[{"primitives":[{"primitiveMode":7,"vertexBundelIndices":[0],"indexView":{"offset":1200,"length":192,"count":96,"stride":2}}],"vertexBundles":[{"view":{"offset":0,"length":1200,"count":25,"stride":48},"attributes":[{"name":"a_position","format":32,"isNormalized":false},{"name":"a_normal","format":32,"isNormalized":false},{"name":"a_texCoord","format":21,"isNormalized":false},{"name":"a_tangent","format":44,"isNormalized":false}]}]},"minPosition",8,[1,-0.8914097547531128,-0.7783313989639282,0],"maxPosition",8,[1,1.165013074874878,0.7783315181732178,5.960464869066151e-13]]],-1],0,0,[],[],[]],[[[52,"ready"],[95,"ready",33554432,[-21,-22,-23,-24,-25,-26,-27],[[[6,-17,[2,"5cBHHP+1RN6r2nvBPui7Eh"],[5,1280,720]],[105,45,100,100,-18,[2,"6attwse7xMLJXJgJyxGthy"]],-19,[109,-20,[2,"81n66WlIxLdZ2ERChjbnDN"]]],4,4,1,4],[110,"d5q0YEnUpFgZrn5AFwis6J",null,-16,0,[[111,["animation"],-3,[5,["2di9kLD5pPF6Jpw7356sjL"]]],[71,["animation"],-5,-4,[5,["2di9kLD5pPF6Jpw7356sjL"]]],[71,["vsAni"],-7,-6,[5,["6ad7e9a0ZCRbQ71NpY1Qzh"]]],[43,["_trailModule","_particleSystem"],-9,[5,["56Vq+CCcBGiIZWaa8lJuYU"]],-8,[5,["56Vq+CCcBGiIZWaa8lJuYU"]]],[43,["_trailModule","_particleSystem"],-11,[5,["112NwUOUdM2Lv92Iu/oqL1"]],-10,[5,["112NwUOUdM2Lv92Iu/oqL1"]]],[43,["_trailModule","_particleSystem"],-13,[5,["35EjGY1BFC4q4yZQM3EQ3D"]],-12,[5,["35EjGY1BFC4q4yZQM3EQ3D"]]],[43,["_trailModule","_particleSystem"],-15,[5,["2fDfgbSURMlbe9nwCxv1u4"]],-14,[5,["2fDfgbSURMlbe9nwCxv1u4"]]]],[-1,-2]]],[59,0,{},1,[70,"671nkB+5BIwqu3pAO/S/uC",null,null,-38,[112,"d8FiOGUvpBeYQBf6tRD7sO",1,[[19,"vsAni",["_name"],-28],[32,["_lpos"],-29,[1,0,0,0]],[32,["_lrot"],-30,[3,0,0,0,1]],[32,["_euler"],-31,[1,0,0,0]],[19,false,["_active"],-32],[19,33554432,["_layer"],-33],[17,33554432,["_layer"],[5,["befx2P76ZEJYnNA1sy6sUE"]]],[17,33554432,["_layer"],[5,["25nH9Fs0pHHb2tiaFqwBk2"]]],[17,33554432,["_layer"],[5,["e1UPQZIdRMI5c9hu2xaYAV"]]],[17,33554432,["_layer"],[5,["90vj3OHSJLUovqU9jaW4PF"]]],[19,33554432,["_layer"],-34],[19,33554432,["_layer"],-35],[19,true,["_active"],-36],[19,true,["_active"],-37],[17,true,["_active"],[5,["aesv0r+uNL84DGzSUPR1Hx"]]],[17,true,["_active"],[5,["80YqfHb5ZOZKFDZo4vSB9T"]]],[17,10,["_capacity"],[5,["56Vq+CCcBGiIZWaa8lJuYU"]]],[17,10,["_capacity"],[5,["112NwUOUdM2Lv92Iu/oqL1"]]],[17,50,["_capacity"],[5,["35EjGY1BFC4q4yZQM3EQ3D"]]],[17,50,["_capacity"],[5,["2fDfgbSURMlbe9nwCxv1u4"]]]]],34]],[59,0,{},1,[70,"290V1ILjpOPZMX5mbbn9DO",null,null,-52,[113,"0cQVosrTNE/K5dF1B5FP6j",1,[[55,[5,["43BiEF9AtDWJ4Ec+Hc/3l+"]],[-46]],[55,[5,["09r6w6SvFH0oV+8TNETyDE"]],[-47,-48,-49]],[55,[5,["bfhqW1Ur9JUqrnjiFSVdiJ"]],[-50,-51]]],[[19,true,["_active"],-39],[19,"readyAni",["_name"],-40],[32,["_lpos"],-41,[1,0,0,0]],[32,["_lrot"],-42,[3,0,0,0,1]],[32,["_euler"],-43,[1,0,0,0]],[17,true,["_active"],[5,["a2LDz/daZNF5XJanb2RW1j"]]],[17,1,["_type"],[5,["33YZu0nBBCLItrNDP6DvSF"]]],[44,["_contentSize"],[5,["4d65ez0PxDcZqB1om5PaIo"]],[5,1000,720]],[44,["_lpos"],[5,["61Urq/Hs9IUrh5gsvQxmWC"]],[1,-445,-0.1,0]],[44,["_contentSize"],[5,["derjrirfRFBqQUHaIBBI0w"]],[5,1000,720]],[44,["_lpos"],[5,["43BiEF9AtDWJ4Ec+Hc/3l+"]],[1,425,0,0]],[19,1,["_type"],-44],[19,0,["_sizeMode"],-45]]],0]],[36,"player2",33554432,[-55,-56],[[31,"player2<UITransform>",-53,[2,"8eRTkO+gFLc4wcsLz55cyo"],[5,150,150]],[69,"player2<Widget>",false,32,200,151,1,-54,[2,"57n+qAodNOm6wJuK7OTo1f"]]],[1,"8cbO+Kq2NHfowZkhhHvDY9",null,null,null,1,0],[1,-5,-250,0]],[16,"btnClose",33554432,1,[[6,-57,[2,"cfcO4YwKRLlo++2u7rtus/"],[5,42,44]],[114,1,-58,[2,"3anMnF2YhD6rxB3fq2CnYJ"],22],[118,3,-60,[2,"6eDIujwGxJgLW7yh2CWhV9"],[[119,"20039gcGzFNu5iBC0qjuHn8","onClose",1]],[4,4292269782],-59,23],[106,9,59,48,-61,[2,"a0NPJn5/pJxqgsUrGx62I/"]]],[1,"99HiJOfrVA24OJC3ZOJMNR",null,null,null,1,0],[1,-560,290,0]],[67,"Bip001 R Hand",33554432,[[-62,-63,-64,-65,-66,[15,"Dummy002",33554432,-67,[1,"9amFaisypJnI+QuEElna37",null,null,null,1,0],[1,0.0345000624656677,0.0186866763979197,0.0152111453935504],[3,0.5638265033965583,0.4123498216195137,0.4853908735083176,0.5257974881955965],[1,119.05475757439287,-31.07334474972206,77.27073360819213]]],1,1,1,1,1,4],[1,"f9+fdIhdRCVZcixuL1qfev",null,null,null,1,0],[1,0.061050396412611,2.38418573772492e-9,1.90734859017994e-8],[3,0.7030753619973373,-0.01793442140047279,0.07271941882251222,0.7071600087727383],[1,89.95437846914551,-7.354368308688092,4.4523527049977645]],[67,"Bip001 R Hand",33554432,[[-68,-69,-70,-71,-72,[15,"Dummy002",33554432,-73,[1,"12hAjoa+JKoKLA1t3+rBfa",null,null,null,1,0],[1,0.0334475599229336,0.0289518926292658,0.0126113910228014],[3,0.05546237598311954,0.6633704984452127,0.7419085596245752,0.0802196721424703],[1,-96.26060267630051,178.59065280942542,11.105463089586259]]],1,1,1,1,1,4],[1,"d3n5I/3YhKz6+fIZNewG+P",null,null,null,1,0],[1,0.0610504150390625,-9.53674295089968e-9,0],[3,0.70307536154595,-0.01793442697689416,0.07271942622640575,0.7071600083187286],[1,89.95437851995004,-7.354369365715222,4.452352853288204]],[36,"readyWait",33554432,[-76],[[12,-74,[2,"9fkGKnP1NE2YwHVU8T6qZj"]],[74,true,-75,[2,"c9LdUXHT1FAo1y6rpeQGDS"],[10],11]],[1,"929R7UJ15M1ax6xJJsXVy9",null,null,null,1,0],[1,6.204000000000008,-55.97000000000003,0]],[36,"readyLight03",33554432,[8,-79,-80],[[6,-77,[2,"f7hn3ieQlPPoPKjPXM4F6Y"],[5,442,540]],[13,-78,[2,"07r6qu1lJAS43O5dmf/3hH"],8]],[1,"09r6w6SvFH0oV+8TNETyDE",null,null,null,1,0],[1,-325,90,0]],[36,"readyWait",33554432,[-83],[[12,-81,[2,"c4ytrGBjFAvrX/QCggeH+I"]],[74,true,-82,[2,"8esK1i7ZJCjZRR1kcqDRx6"],[20],21]],[1,"4bl+ty6LdFG7zXiNOqNNrC",null,null,null,1,0],[1,-6.19399999999996,-55.97000000000003,0]],[60,"girlUI",false,33554432,1,[-87],[[-84,[76,-86,[2,"65XoMh4V5B5bik5OU6adAL"],-85]],1,4],[1,"76fU5bRD9L6r3WvMizlKZq",null,null,null,1,0],[1,320,-83,0],[1,400,400,400]],[29,"Bip001 L Hand",33554432,[-88,-89,-90,-91,-92],[1,"3ap1exTw5HM4Q0D+BZTcFv",null,null,null,1,0],[1,0.0610503852367401,9.53674295089968e-9,1.90734859017994e-8],[3,-0.7144342725158358,0.11160674046518505,-0.04623899650436675,0.689194864272634],[1,-91.47602287395064,5.165893171861213,-12.89744914973529]],[60,"boyUI",false,33554432,1,[-96],[[-93,[76,-95,[2,"8dagrX3ytDfrAtUrM9rb8R"],-94]],1,4],[1,"f19AGwFCRJuLgn4gAVXJHg",null,null,null,1,0],[1,-320,-83,0],[1,400,400,400]],[29,"Bip001 L Hand",33554432,[-97,-98,-99,-100,-101],[1,"3fMDq7hP1CIa0sHnqf1T7D",null,null,null,1,0],[1,0.0610503852367401,9.53674295089968e-9,1.90734859017994e-8],[3,-0.7144342716756308,0.11160674778451185,-0.04623900390056839,0.6891948634621116],[1,-91.47602282027714,5.165893162292793,-12.897450348274333]],[5,["671nkB+5BIwqu3pAO/S/uC"]],[96,"txtNum",33554432,[[[103,-102,[2,"ce4FFHZYZIvZzdTBlJ1Qf0"],[5,0,50.4],[0,1,0.5]],-103,[107,33,350,50,-104,[2,"fa8b7MCeNHXIgDp84whi2m"]]],4,1,4],[1,"3ck1tyE6JJ2pob4dlvcVc/",null,null,null,1,0],[1,150,284.8,0]],[53,"player1",33554432,9,[-106],[[31,"player1<UITransform>",-105,[2,"31gXwLVKRGyJctVfLQttPs"],[5,150,150]]],[1,"e8/c044ZdFn6PINwc/eiHQ",null,null,null,1,0],[1,5,-250,0]],[54,"head",33554432,17,[-109,-110],[[104,"head<UITransform>",-107,[2,"b5jSOssE5CGIyRNwHsPREQ"]],[115,"head<Sprite>",0,false,-108,[2,"93CBDb975IgIaYtDtDdD+S"],7]],[1,"20a+YnXMZB3YfeQKldDHQd",null,null,null,1,0]],[36,"readyLight04",33554432,[10,4],[[6,-111,[2,"f7AlVYqxVBtpYAwtZNwCwO"],[5,442,540]],[13,-112,[2,"bdJupqJv9MVLdaSxnhQbZl"],18]],[1,"bfhqW1Ur9JUqrnjiFSVdiJ",null,null,null,1,0],[1,325,90,0]],[54,"head",33554432,4,[-115,-116],[[12,-113,[2,"c41U8jrRhBvrAe+RigEs39"]],[56,0,false,-114,[2,"e233k1a5FMLaEMo5h0UsCr"],17]],[1,"fefjsB8W9GLpZFsKLfzsRb",null,null,null,1,0]],[5,["290V1ILjpOPZMX5mbbn9DO"]],[39,"left",3,[9,-118,-119],[[12,-117,[2,"7exZdXuipIPZ/GapGVJOfv"]]],[1,"a2LDz/daZNF5XJanb2RW1j",null,null,null,1,0]],[37,"Particle",22,[[-120,[6,-121,[2,"d2mXdwQqxF3J/lh+8Uh7ZA"],[5,0,0]],[18,-122,[2,"4cVc2vuVBG3q+FPzWyzizL"]]],1,4,4],[1,"87zuTzX3pPzp1IG0J7vpDL",null,null,null,1,0],[1,-322.42,-80,0],[3,0.7071067811865475,0,0,0.7071067811865476],[1,90,0,0]],[53,"player1",33554432,9,[-124],[[31,"player1<UITransform>",-123,[2,"f17/kFXZ5FpLP9lrZUPq7j"],[5,150,150]]],[1,"50rhdEd3pFLrYtvLfDEzHc",null,null,null,1,0],[1,5,-250,0]],[39,"right",3,[19,-126,-127],[[12,-125,[2,"caq8EdjmFCQp5t4zdYJlIX"]]],[1,"96Krjzs69EjZIqpB7nlTZj",null,null,null,1,0]],[64,"Particle-001",25,[[45,-128,[2,"54canlCJJDLqzqGbDtzlIb"],[[13,null],6,0],[7],[10,3,5,15],[0],[0],[10,3,10,40],[0],[0],[0],[0],[10,3,1.2,1.6],[0],[4,5],[0],[21,[7]],[47,true,60,140,0.3490658503988659,[4,1]],[33,true,[14,1,[11,[0,0.49743589743589745,1],[[20,2,3.069444444444444,1,3.069444444444444,1],[8,2,0.9925925925925926],[20,2,-2.225225225225225,1,-2.225225225225225,1]]]],[0],[0],[0]],[49,true,[46,1,120,[11,[0,0.24871794871794872,0.6794871794871795,1],[[48,2,-0.014814814814814814,1.8738738738738738,1.8738738738738738],[8,2,0.725925925925926],[8,2,-0.7925925925925926],[8,2,-0.029629629629629627]]]],[0],[0],[4,1]],[22,[0],[0],[0]],[23,[0],[0],[0],[0]],[24,[0],[0],[0]],[34,[14,1,[11,[0,1],[[8,2,1],[8,2,1]]]],[0]],[25],[88,[4,1],[0],[7],[7]],[26,14,15]],[6,-129,[2,"060wWIghVKhbz09nsgKbDv"],[5,0,0]],[18,-130,[2,"e6cPSYmqJBbYflrA12AB0I"]]],[1,"7fpWyZ+qNM5YL27YKrGSu4",null,null,null,1,0],[1,317.828,-80,0],[3,0.7071067811865475,0,0,0.7071067811865477],[1,89.99999999999999,0,0]],[54,"player2",33554432,4,[-133],[[31,"player2<UITransform>",-131,[2,"fbGZJuJgtPm6iq6MVtIhdm"],[5,150,150]],[69,"player2<Widget>",false,32,200,300,1,-132,[2,"51VnM/dm5Bl6W5gpt+0cm5"]]],[1,"bd5ESyEZxOWIgYFpdgZv6n",null,null,null,1,0]],[38,"name",33554432,27,[[[31,"name<UITransform>",-134,[2,"cfFxs4fIZGlbVJRy90L9Vi"],[5,94.9375,60.480000000000004]],-135,[108,"name<Widget>",1,114.76,1,-136,[2,"13/jj5NAtGA78/8EXPBq2n"]]],4,1,4],[1,"b2KPPbsIdEx7Yk+PkVe1At",null,null,null,1,0],[1,0,-70,0]],[68,"RootNode",33554432,11,[[-137,-138,[27,"Dummy001",33554432,-139,[1,"49L51wkZFKWLJxVuUDg8U6",null,null,null,1,0],[1,-1.03005017848545e-8,0.357552468776703,0.235647991299629],[1,0.000009334667642611398,0,0]]],1,1,4],[1,"14XjwyybdIQ6Cr75jOCDda",null,null,null,1,0]],[29,"Bip001 Spine",33554432,[-140,-141,-142],[1,"b6K/xP02tBDYHLNRvG+Xy8",null,null,null,1,0],[1,0.0457569509744644,0.00640488136559725,0.000260389875620604],[3,0.0002465558072309477,0.0002216730798414944,0.020841155273933678,0.9997827445591004],[1,0.02774177267802784,0.024829085593348434,2.3883995343150843]],[29,"Bip001 Neck",33554432,[-143,-144,-145],[1,"7b7PHK/iBGX5lgysF6zklI",null,null,null,1,0],[1,0.0771120637655258,-0.00973913073539734,-8.34465030408182e-9],[3,4.3409130424840775e-9,-2.6530734010550714e-7,0.09614656297873263,0.9953671877389301],[1,0.0000034825602335523218,-0.00003087987860079882,11.034630272376498]],[98,"girl",33554432,29,[[89,-146,[2,"836MmlLvlGsbol3SVFafSW"],[24,25],[50],11,26,27],[12,-147,[2,"42L+VJLklL4It+8vGIMBJK"]],[18,-148,[2,"17UrV8UZpKo4+AjJJv6kMf"]]],[1,"d7Hp9iwHpO1YY938rTh/3i",null,null,null,1,0],[3,-0.7071068407911906,0,0,0.7071067215818996],[1,-90.0000096593463,0,0]],[68,"RootNode",33554432,13,[[-149,-150,[15,"Dummy001",33554432,-151,[1,"8fOkSwIJBOi76ujLuG//On",null,null,null,1,0],[1,-0.0026262472383678,0.2762171626091,0.273240357637405],[3,-0.0001152455427606095,0.00011540946280751928,2.666201588462531e-7,0.9999999866995248],[1,-0.013206169883078716,0.013224953732051431,0.000029028302691846394]]],1,1,4],[1,"4dtkLX+6dFFLA5okK1gD0v",null,null,null,1,0]],[99,"boy",33554432,33,[[89,-152,[2,"3dUn1lqKFIwb/HIlx9wV5k"],[29,30],[50],13,31,32],[12,-153,[2,"00VnrvPKtOJLODdKkmHCCQ"]],[18,-154,[2,"cdvPOH4INCjZHe6g3pVPq8"]]],[1,"44oTVKmb5HFqU4hUy9PXji",null,null,null,1,0],[3,-0.7071067811865476,0,0,0.7071067811865476],[1,0.990418016910553,0.990418016910553,0.990418016910553],[1,-90.00000000000003,0,0]],[29,"Bip001 Spine",33554432,[-155,-156,-157],[1,"68sE1OHjpE84YDOZ7mqqeJ",null,null,null,1,0],[1,0.0457569509744644,0.00640487996861339,0.000260389439063147],[3,0.0002465639562264269,0.0002216732543951817,0.020841170168579868,0.9997827442465629],[1,0.027742706322824384,0.02482908573196374,2.388401241693745]],[29,"Bip001 Neck",33554432,[-158,-159,-160],[1,"d6a+Irr2dA7YMyd5DlOxJ5",null,null,null,1,0],[1,0.0771120637655258,-0.00973912794142962,-8.64267324374168e-9],[3,4.572663224640448e-9,-2.652849439880993e-7,0.09614655559702624,0.9953671884519589],[1,0.0000035092400972563663,-0.00003087987731811997,11.034629422558199]],[101,"Bip001 Head",33554432,36,[[[28,"Bip001 HeadNub",33554432,-161,[1,"08uCnsDEFMzZ2OriQk26sY",null,null,null,1,0],[1,0.354530811309814,-2.38418573772492e-9,2.22044599961948e-18]],-162,-163],4,1,1],[1,"15uU1bnzRN+bEmV9tRCISZ",null,null,null,1,0],[1,0.0269345082342625,-4.76837147544984e-9,1.11022299980974e-18],[3,0.10486840503209079,0.021907176919531552,-0.10136050775873638,0.9890645786258513],[1,12.478387255127068,3.7768476015519794,-11.297855108614025]],[53,"readyBg02",33554432,3,[16],[[6,-164,[2,"derjrirfRFBqQUHaIBBI0w"],[5,1000,720]],[116,1,0,-165,[2,"4545dxARNHYIr0SMPGHdRy"],1]],[1,"43BiEF9AtDWJ4Ec+Hc/3l+",null,null,null,1,0],[1,425,0,0]],[16,"readyImg03",33554432,22,[[6,-166,[2,"4f/9iFNkZGBZo0cJBF+ogc"],[5,199,163]],[13,-167,[2,"e95rqZG8dNkb6ameKRBOpi"],2]],[1,"11uqlZGb1CB4d0mAbs+rqe",null,null,null,1,0],[1,-317.015,-48.411,0]],[40,"frame",33554432,18,[[6,-168,[2,"62DlenL5hIa4gtzVSx/912"],[5,106,108]],[56,0,false,-169,[2,"7ftkFyiSVLm5MzyIAZYp6v"],6]],[1,"2b3QLIQ/5L57Eo5jrzHZi1",null,null,null,1,0]],[38,"avatar",33554432,18,[[[6,-170,[2,"c71aoGRFRFh6ksPeTxNhj/"],[5,90,90]],-171],4,1],[1,"88QEiL4ylJVJhQFvIBbBZc",null,null,null,1,0],[1,0,4,0]],[38,"name",33554432,24,[[[31,"name<UITransform>",-172,[2,"deWy6TNq5P575HTkTKzw9G"],[5,94.9375,60.480000000000004]],-173],4,1],[1,"e3La4FaxZI3aEMqH8eK0KF",null,null,null,1,0],[1,0,-70,0]],[40,"readyImg01",33554432,8,[[6,-174,[2,"08GLpX6A9KF7yK2JeSVdT9"],[5,47,73]],[13,-175,[2,"90iXJBPjROiI8RgW3omXSH"],9]],[1,"afyb78jtBPSqu+Ebv2Crgb",null,null,null,1,0]],[16,"readyImg03",33554432,25,[[6,-176,[2,"056fx8QMdKRoHOt9pzTthA"],[5,199,163]],[13,-177,[2,"d0TE/seVBNZ5VMJZZs2+N8"],12]],[1,"deFAEerflMbr4bK9O4SDDg",null,null,null,1,0],[1,323.427,-49.108,0]],[40,"frame",33554432,20,[[6,-178,[2,"b3LVnaSMVIz5WpyvZ/1njk"],[5,106,108]],[56,0,false,-179,[2,"da0guTz7hFkJ86MQxhXhP0"],16]],[1,"96CIEpQEVOdpiSZYSz5fTR",null,null,null,1,0]],[38,"avatar",33554432,20,[[[6,-180,[2,"ccXTVW2upIEJ/v6ct7dmwK"],[5,90,90]],-181],4,1],[1,"1a8SBewftC3673RKwqT9PO",null,null,null,1,0],[1,0,3,0]],[40,"readyImg01",33554432,10,[[6,-182,[2,"5bAWmUC79OQJuk/hoxKZct"],[5,47,73]],[13,-183,[2,"00Pm+kMz1EC4lHiA4waOoO"],19]],[1,"86A5bVqYdAS7UXl1+FUY5h",null,null,null,1,0]],[65,"left",1,[[12,-184,[2,"74PRIZl3hED69AMVU5gifW"]]],[1,"dcCIGbBItKoqH903UkpdE0",null,null,null,1,0],[1,-320,0,0]],[65,"right",1,[[12,-185,[2,"61SHoKsnBNgb9zIZwfxWNa"]]],[1,"8cDVwR1mNMibQExaYFM3LL",null,null,null,1,0],[1,320,0,0]],[3,"Bip001 Head",33554432,31,[-186,-187],[1,"fabLdVCklCWa2B6h7aBgah",null,null,null,1,0],[1,0.0269345082342625,-4.76837147544984e-9,1.11022299980974e-18],[3,0.1048684124756508,0.02190717878071027,-0.10136050030137016,0.9890645785596422],[1,12.47838809845719,3.776847801804816,-11.297854204058178]],[122,1,[2,"5c0ekdudZLz4ALe2KG4Mar"],[8,10],[17,4],[-190,-191],[-188,-189],[35,36],48,49,5,11,13],[123,"",24,24,16,[2,"e1+4tCud5MoIPbtlUcIMag"]],[45,23,[2,"66+L5461BGHKlq/bHynnQt"],[[3,null],6,0],[7],[10,3,5,15],[0],[0],[10,3,10,40],[0],[0],[0],[0],[10,3,1.2,1.6],[0],[4,5],[0],[21,[7]],[47,true,60,140,0.3490658503988659,[4,1]],[33,true,[14,1,[11,[0,0.49743589743589745,1],[[20,2,3.069444444444444,1,3.069444444444444,1],[8,2,0.9925925925925926],[20,2,-2.225225225225225,1,-2.225225225225225,1]]]],[0],[0],[0]],[49,true,[46,1,120,[11,[0,0.24871794871794872,0.6794871794871795,1],[[48,2,-0.014814814814814814,1.8738738738738738,1.8738738738738738],[8,2,0.725925925925926],[8,2,-0.7925925925925926],[8,2,-0.029629629629629627]]]],[0],[0],[4,1]],[22,[0],[0],[0]],[23,[0],[0],[0],[0]],[24,[0],[0],[0]],[34,[14,1,[11,[0,1],[[8,2,1],[8,2,1]]]],[0]],[25],[35,[4,1],[0],[7],[7],-192],[26,4,5]],[72,0,false,41,[2,"8b1cg+p6pKYYKh9AT9hO9B"]],[90,"name<Label>","Player1",28,28,48,1,42,[2,"6bHvU8WElA2b62wkEVcXck"]],[72,0,false,46,[2,"cdTKZvCk1EWaf0JhlwLknF"]],[90,"name<Label>","Player2",28,28,48,1,28,[2,"d0JncBE/NIkLz9uId0/zW+"]],[5,["4545dxARNHYIr0SMPGHdRy"]],[3,"Bip001",33554432,29,[-193],[1,"5cAZ1Onj5Ig4wJuAVFTF4p",null,null,null,1,0],[1,-5.33773691913098e-9,0.185233414173126,0.00308884051628411],[3,0.40946585975226213,0.5076655873861485,0.576487436565012,-0.49221499018611675],[1,-90.00000635552601,-100.49998187701541,-8.729402343879485]],[61,"Bip001 Pelvis",33554432,59,[30],[1,"6aXQSpVLJFArbWO6Mb9gdh",null,null,null,1,0],[3,0.5157782286572634,0.48522155076710255,0.5142670125372386,-0.483799860820947],[1,-93.4969694075144,-89.98974555988529,0.16780844790005792]],[3,"Bip001 Spine1",33554432,30,[31],[1,"03PDc1UDdAe7Sn5ypldNcV",null,null,null,1,0],[1,0.0662833005189896,-0.0000660419464111328,-2.22027303209416e-8],[3,-0.0003771987449769097,-0.006372649781767709,-0.08329767856019522,0.9965042618084219],[1,-0.10536301513396282,-0.7416102709975355,-9.55580645300047]],[3,"Bip001 L Clavicle",33554432,31,[-194],[1,"180CxnnntDDYIN6G1P9HFC",null,null,null,1,0],[1,-0.0181774515658617,0.00832205265760422,0.0298318360000849],[3,0.706413511838307,0.03130769376482684,0.687228087868426,0.16648523612652433],[1,168.47615061240674,-86.81344367211962,15.846377571582492]],[3,"Bip001 L UpperArm",33554432,62,[-195],[1,"bbNtPBrN5EMYad1HIT7LYC",null,null,null,1,0],[1,0.0388813354074955,-3.57627860658738e-9,7.10542719878232e-17],[3,0.20365555666722315,0.42840364748492143,-0.02720131922328686,0.879917505958764],[1,22.631561882679215,50.462375169098266,7.274533972006538]],[3,"Bip001 L Forearm",33554432,63,[12],[1,"c9h0ZWOBBCd6a00O9jCL+K",null,null,null,1,0],[1,0.101743429899216,-9.53674295089968e-9,-3.55271359939116e-17],[3,4.141751984612078e-18,2.7444814961169913e-17,-0.14922234155647982,0.9888036674590165],[1,9.823399879681234e-16,3.3288015762043706e-15,-17.163725628495204]],[9,"Bip001 L Finger0",33554432,12,[[15,"Bip001 L Finger01",33554432,-196,[1,"e1DYD/qNtNSKeBsYPJ1s0Q",null,null,null,1,0],[1,0.0208207312971354,-1.43051144263495e-8,4.76837147544984e-9],[3,1.757477353549704e-8,-3.2846710052039735e-8,0.4717691811656069,0.8817220875663326],[1,0.000006400510968147935,-0.000007693489397494446,56.298398647998035]]],[1,"d1pca/kVlFy7kKppSWGmAx",null,null,null,1,0],[1,0.0173563286662102,0.00211561191827059,-0.0253975763916969],[3,0.5460578118572452,0.2951466097389007,0.2478700390785869,0.7438210729715113],[1,67.14208680636837,13.470628407599527,43.7153552033834]],[9,"Bip001 L Finger1",33554432,12,[[15,"Bip001 L Finger11",33554432,-197,[1,"45K6FoVxFJCIRdV5wAqD63",null,null,null,1,0],[1,0.0123886484652758,-1.43051144263495e-8,9.53674295089968e-9],[3,-5.776290491031189e-10,-2.4580834864471665e-8,0.5871891908362259,0.8094497230619687],[1,0.000005155602027451285,-0.000007219806005925127,71.9155946702854]]],[1,"5cednBO01Aw55bYV2JRK9/",null,null,null,1,0],[1,0.0459478385746479,0.00128101347945631,-0.0214852821081877],[3,0.06272287654803924,0.1317307201489177,0.42765709676029345,0.8920887095559187],[1,-0.06974229497940829,16.83324283585707,51.21858678382821]],[9,"Bip001 L Finger2",33554432,12,[[15,"Bip001 L Finger21",33554432,-198,[1,"cdqInlOY9CnrLcNzLUYdju",null,null,null,1,0],[1,0.016605643555522,-4.76837147544984e-9,7.15255721317476e-9],[3,1.6403056398162583e-8,1.5633869031424698e-8,0.561539103506704,0.8274502010591858],[1,0.0000014872590551338506,0.0000011557859411908407,68.32460793783906]]],[1,"ecKHEWoLlIpqdoYN0p/+cI",null,null,null,1,0],[1,0.0475340150296688,-0.000539741478860378,-0.00699821952730417],[3,0.025371701338378166,0.062078802041862,0.4723799976099666,0.8788399381948067],[1,-1.4573422627400068,8.863340909194719,56.45404930165332]],[9,"Bip001 L Finger3",33554432,12,[[15,"Bip001 L Finger31",33554432,-199,[1,"c18D1zEDVNR5nViELr8jsC",null,null,null,1,0],[1,0.0142769999802113,-9.53674295089968e-9,8.88178399847791e-18],[3,-1.2291616537018884e-8,4.3744634309423796e-9,0.5819153749533224,0.81324934453889],[1,-0.000004452918188557115,0.0000038026444934164083,71.17074595702604]]],[1,"2crZ4CBopB+pcYOmtT7pAS",null,null,null,1,0],[1,0.0483224652707577,0.00125642772763968,0.00621134275570512],[3,-0.0760434582080037,0.008960821832584773,0.42171714494648777,0.903488652830812],[1,-12.904209490514717,7.108469641867302,49.52334220720248]],[9,"Bip001 L Finger4",33554432,12,[[15,"Bip001 L Finger41",33554432,-200,[1,"a8TBX4wZ9AU7OEUoN7HAAi",null,null,null,1,0],[1,0.0114022446796298,9.53674295089968e-9,1.43051144263495e-8],[3,-1.0652114511359567e-9,-2.9009679352998274e-8,0.48147891892179606,0.8764576719008726],[1,0.000002784678085812731,-0.000005322593808887502,57.56407432165691]]],[1,"6eWiLa1N1HVJgh92MGqB7v",null,null,null,1,0],[1,0.0457701943814754,0.00529300700873137,0.0185003709048033],[3,-0.09596158578323329,-0.08404125285692318,0.49938634112038277,0.8569374097182376],[1,-9.469229050452123,-5.650295449353154,60.69366280680558]],[3,"Bip001 R Clavicle",33554432,31,[-201],[1,"4eEFMwXQZDWoxwgsV3p6YX",null,null,null,1,0],[1,-0.0181774515658617,0.00832222402095795,-0.0298318266868591],[3,-0.6300047675221674,0.14619483144624992,0.7627034234761011,0.0021335359329826935],[1,-166.7333517194433,102.10123520809256,-10.425237644404687]],[3,"Bip001 R UpperArm",33554432,70,[-202],[1,"3aiqOUshxOdriAXCxs5Vrw",null,null,null,1,0],[1,0.0388813279569149,2.38418573772492e-9,0],[3,-0.1142221395199728,-0.37213969360931193,0.06632053875298907,0.9187311562276317],[1,-9.443042111313996,-43.11197529651106,11.93926277013884]],[3,"Bip001 R Forearm",33554432,71,[6],[1,"5ePTbKa9FJYonV46NEjmDA",null,null,null,1,0],[1,0.101743429899216,-4.76837147544984e-9,-1.90734859017994e-8],[3,-2.510093976077023e-17,-9.131021179274701e-17,-0.120896012281735,0.9926651772951314],[1,-4.244307404702069e-15,-1.1057604936214095e-14,-13.887633603216324]],[9,"Bip001 R Finger0",33554432,6,[[15,"Bip001 R Finger01",33554432,-203,[1,"5cU2nfIvVKMYwFzPjRLvAF",null,null,null,1,0],[1,0.0208207126706839,-2.38418573772492e-9,-1.77635679969558e-17],[3,1.5154318395610166e-8,-4.488517914878277e-9,0.47717981607349913,0.8788056799611966],[1,0.00000325291138274067,-0.0000023515664134005184,57.002745547622936]]],[1,"b4R69arYNBXJ5MjOhckVNV",null,null,null,1,0],[1,0.0173563100397587,0.00211559282615781,0.0253975782543421],[3,-0.6858700533658382,-0.3229400524887903,0.06109472009311928,0.6492760796234706],[1,-86.52420199765557,-23.17191169613483,31.488304103009973]],[9,"Bip001 R Finger1",33554432,6,[[15,"Bip001 R Finger11",33554432,-204,[1,"52C9cF6MhKCJNIQrR+xCU9",null,null,null,1,0],[1,0.0123886484652758,-1.90734859017994e-8,-8.88178399847791e-18],[3,8.781563197326402e-10,-8.704798603143976e-9,0.5144655671093913,0.8575110379807436],[1,0.0000012737020100042172,-0.0000019274064083655027,61.92347887354179]]],[1,"c8/CHGROBFyYPGkym2UpFB",null,null,null,1,0],[1,0.045947827398777,0.00128103257156909,0.0214852727949619],[3,-0.061897560416977006,-0.13212051873000247,0.4220679961772824,0.8947465938173977],[1,0.0686789628079953,-16.831870570110773,50.50172014095799]],[9,"Bip001 R Finger2",33554432,6,[[15,"Bip001 R Finger21",33554432,-205,[1,"74g7I/SnZGxa/BsWKi+6+A",null,null,null,1,0],[1,0.0166056621819735,-2.8610228852699e-8,1.19209282445354e-8],[3,7.621502346938036e-10,-1.4294995463619024e-8,0.5651857278241516,0.8249636919670369],[1,0.0000027631911654472238,-0.000003878718612184043,68.8303791482051]]],[1,"7aHIahWwdCHZf19QT0JXpk",null,null,null,1,0],[1,0.0475340075790882,-0.00053972244495526,0.00699821440503001],[3,-0.02115074233587262,-0.06364076022976771,0.4123696505687953,0.9085448646191272],[1,1.2217253214378427,-8.567452567092628,48.764335671225076]],[9,"Bip001 R Finger3",33554432,6,[[15,"Bip001 R Finger31",33554432,-206,[1,"faSQofve9JsbWMvA6Rcot2",null,null,null,1,0],[1,0.0142769813537598,9.53674295089968e-9,2.38418573772492e-9],[3,6.027719441569656e-9,-9.410987208864838e-9,0.5393512056459384,0.8420809206770288],[1,0.000002781665263746331,-0.0000030623116456205335,65.27896703804224]]],[1,"42KiEH0qdIwaMQkM9ITDI9",null,null,null,1,0],[1,0.0483224652707577,0.00125642772763968,-0.00621132832020521],[3,0.07640349856745544,-0.005040915677492358,0.37472698052173525,0.9239679565032807],[1,11.579872546509373,-5.289454583551459,43.7649215489721]],[9,"Bip001 R Finger4",33554432,6,[[15,"Bip001 R Finger41",33554432,-207,[1,"deZr6vzEJEuqlXQxx6m0fs",null,null,null,1,0],[1,0.0114022251218557,-1.90734859017994e-8,8.88178399847791e-18],[3,-3.3225642287444284e-8,2.5058914645814004e-9,0.3786801054854385,0.9255276212569434],[1,-0.000005093324618953432,0.000002394196199832736,44.503898586121466]]],[1,"4aB11CYEFCka4Rcafk/jhI",null,null,null,1,0],[1,0.0457701869308949,0.00529302563518286,-0.0185003615915775],[3,0.08578144835039331,0.09440923565933229,0.39869127031205454,0.9081705293159923],[1,6.880284870594119,8.82065258470213,47.76178814997586]],[3,"Bone001",33554432,50,[-208],[1,"f0XLWej6VOt64uTMOOsRLs",null,null,null,1,0],[1,0.294688373804092,-0.0585864819586277,-0.0957831516861916],[3,-0.3241100300256112,0.46548572024340645,-0.1881634288587162,0.8017919036298666],[1,-25.60197623193476,51.55027078217466,-37.11904065143014]],[3,"Bone002",33554432,78,[-209],[1,"d2YjZNLS5KX7DCEqSit3EO",null,null,null,1,0],[1,0.0942807719111443,-7.15255721317476e-9,0],[3,-0.0007401633879674925,0.5844190203455569,0.006997821485998439,0.8114215250478315],[1,-0.5374998918919991,71.52877717067113,0.6011145056125025]],[3,"Bone003",33554432,79,[-210],[1,"cbk/D4g/9POKVIrYfeG5WU",null,null,null,1,0],[1,0.0582422614097595,1.43051144263495e-8,0],[3,-0.6234356262923071,0.2085479530688853,0.37471819512927507,0.6537752254248821],[1,-93.42677773474786,49.48911104223326,13.292979881461475]],[3,"Bone004",33554432,80,[-211],[1,"84Od+9GV5KrrkpGqWKJxgu",null,null,null,1,0],[1,0.0799597129225731,3.81469718035987e-8,1.90734859017994e-8],[3,0.23706631470094386,-0.005805086370842478,-0.07505676929464684,0.9685723229523906],[1,27.61155078880962,1.4103733913919787,-8.519627237498556]],[9,"Bone005",33554432,81,[[27,"Bone006",33554432,-212,[1,"486d96j55MyYi6UllqtTyS",null,null,null,1,0],[1,0.0949970409274101,3.81469718035987e-8,0],[1,2.1344216478558687e-7,-0.000005122641444954277,-0.000013660376721123104]]],[1,"1fqfPKbf9AQpZKIPvyezL8",null,null,null,1,0],[1,0.0957527160644531,-5.72204577053981e-8,-3.81469718035987e-8],[3,0.41851928801278987,-0.11926612994788992,-0.19865189479000273,0.8781540983818629],[1,50.30747658287531,-2.7700365160429152,-26.661865953050025]],[97,"Bone007",33554432,50,[-213],[1,"5cafHjMhFFCYm4Getvo3Ev",null,null,null,1,0],[1,0.294688373804092,-0.0585867092013359,0.095783069729805],[3,-0.46548515931519796,-0.32411125562222715,0.8017914955539406,0.18816444428654266],[1,-1,-1,-1],[1,154.39788806787845,128.4498521666241,37.11920247868431]],[3,"Bone008",33554432,83,[-214],[1,"ff6Ms4fb1BCYoS0jzqVWwb",null,null,null,1,0],[1,0.0942807719111443,0,3.81469718035987e-8],[3,-0.0007401046309557999,0.5844190598292882,0.006997769556669199,0.811421497111469],[1,-0.5374909791826391,71.52878266204058,0.6011135862425706]],[3,"Bone009",33554432,84,[-215],[1,"3aPOkwq6FBjIyzMLPUc8bW",null,null,null,1,0],[1,0.0582422614097595,2.8610228852699e-8,-7.62939436071974e-8],[3,-0.6226409063984667,0.191988437946654,0.3710001400914688,0.6616778955248621],[1,-92.99982889525863,47.72512417821825,14.589112906484381]],[3,"Bone010",33554432,85,[-216],[1,"65juDEbRNIDqWX9xOoyITX",null,null,null,1,0],[1,0.0799595639109612,-1.90734859017994e-8,1.90734859017994e-8],[3,0.23630435438129815,-0.01725905737264316,-0.08272050951809942,0.967997776001635],[1,27.465074398363615,0.3302080196234454,-9.689185088611179]],[9,"Bone011",33554432,86,[[27,"Bone012",33554432,-217,[1,"95geM/d4NKsowLZQxp3OcA",null,null,null,1,0],[1,0.0949970409274101,2.8610228852699e-8,3.81469718035987e-8],[1,7.603896219715473e-7,-0.000008537735540652396,-0.000016221697706989615]]],[1,"bfR12955dJOZjW9EyzBX9y",null,null,null,1,0],[1,0.0957527533173561,-3.81469718035987e-8,-7.62939436071974e-8],[3,0.41848968927327257,-0.11910272983241728,-0.19040204342458256,0.8800158984803451],[1,50.134475840589786,-3.199569065301116,-25.772579668534085]],[3,"Bip001 L Thigh",33554432,30,[-218],[1,"7dxL3lNVtOmap5eVpiB8JZ",null,null,null,1,0],[1,-0.0460067540407181,-0.00446621654555202,0.0521033070981503],[3,0.38403112554054714,0.9021412931728536,0.15767290050318306,-0.11747526639844337],[1,-29.76115561217545,-153.81908803848273,40.98453825730279]],[3,"Bip001 L Calf",33554432,88,[-219],[1,"3e9wP2wHdCO5RoZMJL9y+4",null,null,null,1,0],[1,0.0757822766900063,-1.77635679969558e-17,0],[3,1.798719159777913e-17,2.224817270855386e-17,-0.42133001161341005,0.906907394012114],[1,4.563773464553593e-15,4.931382798846332e-15,-49.83717038418197]],[3,"Bip001 L Foot",33554432,89,[-220],[1,"2aggz/uN1Eiaz6zJA3Sgk5",null,null,null,1,0],[1,0.0684369206428528,9.53674295089968e-9,8.88178399847791e-18],[3,-0.000231780229629709,-0.07603621529586316,0.11526122015036737,0.9904207648120342],[1,1.004569482289044,-8.896392773093673,13.199916955892595]],[3,"Bip001 L Toe0",33554432,90,[-221],[1,"b8WXAxRB5Aa6chVDmVhSDG",null,null,null,1,0],[1,0.0584012642502785,0.0751598700881004,8.88178399847791e-18],[3,-0.06909814595012698,0.06909784047631726,0.703723025423289,0.7037221313536027],[1,-90.00038311505723,90.00035824394952,78.78429241971652]],[42,"Bip001 L Toe01",33554432,91,[[28,"Bip001 L Toe02",33554432,-222,[1,"2b3ovVJVJCMqvYVK9WeLxP",null,null,null,1,0],[1,0.00761754019185901,-9.31322553798797e-12,9.53674295089968e-9]]],[1,"ebrIpILAFLjLyzx/wHm872",null,null,null,1,0],[1,0.00761755928397179,9.31322553798797e-12,-9.53674295089968e-9]],[3,"Bip001 R Thigh",33554432,30,[-223],[1,"1btsFBvjFBgJd7j9WliW+u",null,null,null,1,0],[1,-0.0459612458944321,-0.00451899040490389,-0.0526593923568726],[3,0.08050674786846533,0.9842916533562566,-0.13135257105091275,0.0862270651197477],[1,15.962671582434071,168.89074449511224,7.80673006619181]],[3,"Bip001 R Calf",33554432,93,[-224],[1,"08/n7TvVRCVLwUx68GtO47",null,null,null,1,0],[1,0.0757822617888451,1.19209286886246e-9,-9.53674295089968e-9],[3,0,0,-0.3183895380076978,0.947959968610091],[1,0,0,-37.131117791744366]],[3,"Bip001 R Foot",33554432,94,[-225],[1,"bfiDBD1JJEtIoosr2evbmS",null,null,null,1,0],[1,0.0684369057416916,4.76837147544984e-9,9.53674295089968e-9],[3,-0.003201644215518692,0.10994304875757863,0.31459618070204765,0.9428316491250655],[1,-5.357346744083865,15.061609070427648,36.3359312275526]],[3,"Bip001 R Toe0",33554432,95,[-226],[1,"b3T2LfqyRJU5z3x7qRaTRM",null,null,null,1,0],[1,0.0584012642502785,0.0751598849892616,-4.76837147544984e-9],[3,-0.07787185934685675,0.07787179974221174,0.7028058195930623,0.7028057599884171],[1,-90.00002435727872,90.00001949804928,77.35468095084249]],[42,"Bip001 R Toe01",33554432,96,[[28,"Bip001 R Toe02",33554432,-227,[1,"ebl1nW6yhOSKJ0sblRhg1+",null,null,null,1,0],[1,0.00761755462735891,-9.31322553798797e-12,-1.77635679969558e-17]]],[1,"edY9vS/oNB74APotxJMj/0",null,null,null,1,0],[1,0.00761754950508475,1.73472343720272e-20,9.53674295089968e-9]],[91,true,11,[2,"cbQ4sQgO5KQaHDHQjnRbGM"],[28]],[3,"Bip001",33554432,33,[-228],[1,"8dRjed6chOU4VD9dgt2NO0",null,null,null,1,0],[1,-5.33773691913098e-9,0.185233384370804,0.00308884051628411],[3,0.40946584736214137,0.5076656316292236,0.5764874191209473,-0.49221497529207114],[1,-90.00000284743632,-100.49998470652098,-8.729398981957816]],[61,"Bip001 Pelvis",33554432,99,[35],[1,"02twDmq1pNvqK0o7O0yJGT",null,null,null,1,0],[3,0.5157795014518499,0.4852202295097408,0.5142682256653666,-0.48379853950543444],[1,-93.49726339210515,-89.98974161123415,0.1678117377535482]],[3,"Bip001 Spine1",33554432,35,[36],[1,"7eqiiyzCRL0YidhqF6VkJ6",null,null,null,1,0],[1,0.0662833005189896,-0.0000660419464111328,-2.13086597256051e-8],[3,-0.00037719164340237784,-0.006372652571684106,-0.08329768595782008,0.9965042611749019],[1,-0.10536222550663386,-0.7416105270646252,-9.555807308633186]],[3,"Bip001 L Clavicle",33554432,36,[-229],[1,"5cTTBJFx5L1KRb+daeqCIE",null,null,null,1,0],[1,-0.0181774515658617,0.00832205265760422,0.0298318322747946],[3,0.7064135103329875,0.0313076825222413,0.6872280864039894,0.16648525067291658],[1,168.4761484366566,-86.81344334468187,15.846377781688235]],[3,"Bip001 L UpperArm",33554432,102,[-230],[1,"5aWHiVTtVNSp25yBchkduW",null,null,null,1,0],[1,0.0388813279569149,1.19209286886246e-9,0],[3,0.20365557100194226,0.4284036462933714,-0.027201309834404053,0.8799175035113859],[1,22.631562978959934,50.462374766490875,7.274535615459702]],[3,"Bip001 L Forearm",33554432,103,[14],[1,"9e+Uk3MVpOKKMsMSC76Yud",null,null,null,1,0],[1,0.110384956002235,0,3.55271359939116e-17],[3,4.141752793373584e-18,2.7444814839118084e-17,-0.14922237069518365,0.9888036630616359],[1,9.823401933031873e-16,3.32880163679941e-15,-17.163729005353137]],[3,"Bip001 L Finger0",33554432,14,[-231],[1,"f1ugFEJctJlqWvW1wadgaW",null,null,null,1,0],[1,0.0173563193529844,0.00211561191827059,-0.0253975745290518],[3,0.5460578138741378,0.29514661082903987,0.2478700250929458,0.7438210757188527],[1,67.14208653762333,13.470629525742368,43.71535385081525]],[9,"Bip001 L Finger01",33554432,105,[[28,"Bip001 L Finger0Nub",33554432,-232,[1,"081/1YunRA17IJa+SbcvvC",null,null,null,1,0],[1,0.0138832563534379,0,0]]],[1,"27fcq3wWxKvbEkYj0w4I8O",null,null,null,1,0],[1,0.0208207312971354,-1.66893006081636e-8,9.53674295089968e-9],[3,6.569341477500895e-9,3.5149543074191126e-9,0.47176918116560723,0.8817220875663332],[1,8.537736462515946e-7,-5.9790418197775705e-22,56.29839864799826]],[3,"Bip001 L Finger1",33554432,14,[-233],[1,"77q5/H6KZFyK8/t+D5RE5r",null,null,null,1,0],[1,0.0459478572010994,0.00128103257156909,-0.0214852802455425],[3,0.06272286992618434,0.13173072188940937,0.427657072608388,0.8920887213426375],[1,-0.06974278979108318,16.83324307066534,51.21858362461119]],[9,"Bip001 L Finger11",33554432,107,[[27,"Bip001 L Finger1Nub",33554432,-234,[1,"cc9lpKoVZPELSiqRccgaBE",null,null,null,1,0],[1,0.017009811475873,0,0],[1,-3.975694674417075e-15,0.0000010672171595922416,4.268868740146714e-7]]],[1,"05rnXuCL5FUJGHuy0DR/4q",null,null,null,1,0],[1,0.0123886298388243,-1.77635679969558e-17,1.43051144263495e-8],[3,-1.8077229029216837e-8,-4.573524167323052e-10,0.5871891517827332,0.809449751392064],[1,-0.00000530252965418524,0.0000037818025865368035,71.91558914159057]],[3,"Bip001 L Finger2",33554432,14,[-235],[1,"d2pTFUCZBDo70ea0b7q5ok",null,null,null,1,0],[1,0.0475339964032173,-0.000539741478860378,-0.00699820509180427],[3,0.0253717003430471,0.062078814507673594,0.472379949276192,0.8788399633225874],[1,-1.4573426695193332,8.863342411519595,56.454043007413745]],[9,"Bip001 L Finger21",33554432,109,[[27,"Bip001 L Finger2Nub",33554432,-236,[1,"46EiEzwhNIo4Jq7fbRlmsL",null,null,null,1,0],[1,0.0156214330345392,1.90734859017994e-8,-2.38418573772492e-9],[1,-8.537735667377207e-7,-0.000002988207361130684,-8.537735222099664e-7]]],[1,"ablvE/CyBCw7P5ot93RLjV",null,null,null,1,0],[1,0.0166056826710701,-9.53674295089968e-9,7.15255721317476e-9],[3,8.478287254259169e-9,-2.576123446359504e-8,0.5615391035067039,0.8274502010591855],[1,0.000006664657633528593,-0.000008090500049142927,68.32460793783885]],[3,"Bip001 L Finger3",33554432,14,[-237],[1,"deG8OX5kVMBKVNUars1mAh",null,null,null,1,0],[1,0.0483224764466286,0.0012564086355269,0.00621133809909225],[3,-0.0760434433815867,0.008960838605199193,0.42171714536100113,0.9034886537188673],[1,-12.904208339798167,7.108471222246505,49.523342137725315]],[9,"Bip001 L Finger31",33554432,111,[[27,"Bip001 L Finger3Nub",33554432,-238,[1,"d2TigOc9lDYLlP/vUkUotD",null,null,null,1,0],[1,0.0162050053477287,0,-1.19209282445354e-8],[1,-8.537736462515943e-7,0.0000013340212204903702,-2.7829853462806068e-15]]],[1,"90XqnGckBH+ZbVzF2Vl0lo",null,null,null,1,0],[1,0.0142769813537598,0,9.53674295089968e-9],[3,-1.2833567018139575e-8,5.131860238168887e-9,0.5819153749533224,0.81324934453889],[1,-0.000004765886987455077,0.0000041333089307217905,71.17074595702604]],[3,"Bip001 L Finger4",33554432,14,[-239],[1,"c0zlKh3IhKoJ6gOrg58f51",null,null,null,1,0],[1,0.0457701943814754,0.00529302563518286,0.0185003615915775],[3,-0.09596160054717524,-0.08404125273674928,0.49938634040629065,0.8569374084928693],[1,-9.46923205421923,-5.650293682748555,60.69366280806592]],[9,"Bip001 L Finger41",33554432,113,[[28,"Bip001 L Finger4Nub",33554432,-240,[1,"8coFqyPvJBbJgezpYpKW4a",null,null,null,1,0],[1,0.0135041810572147,-1.77635679969558e-17,-9.53674295089968e-9]]],[1,"d3Awlp5UFPaoV17v7aNGPY",null,null,null,1,0],[1,0.0114022064954042,9.53674295089968e-9,9.53674295089968e-9],[3,-2.055707055485158e-8,1.420941042822107e-8,0.48147889602830657,0.87645768447733],[1,-0.000005311068016201492,0.00000477541099029829,57.564071328471094]],[3,"Bip001 R Clavicle",33554432,36,[-241],[1,"8dcONzCDxNWanMoMk3XD/9",null,null,null,1,0],[1,-0.0181774515658617,0.00832221936434507,-0.0298318229615688],[3,-0.6300047661152938,0.146194846020942,0.762703421772896,0.002133561539589173],[1,-166.7333485410304,102.10123535781756,-10.425236415152197]],[3,"Bip001 R UpperArm",33554432,115,[-242],[1,"a8ReXF+ptJtaTOgATkG+1g",null,null,null,1,0],[1,0.0388813205063343,2.38418573772492e-9,0],[3,-0.11422214687334832,-0.3721396932926131,0.06632053869654887,0.9187311554457717],[1,-9.443042918535438,-43.111975186140114,11.939263074266588]],[3,"Bip001 R Forearm",33554432,116,[7],[1,"235D2CqDBJtp9ki8Y8QgNi",null,null,null,1,0],[1,0.110384956002235,9.53674295089968e-9,3.55271359939116e-17],[3,1.083990004899296e-17,-2.5785764201724268e-17,-0.12089602696510297,0.9926651755068541],[1,9.021953984157772e-16,-2.8667864568623985e-15,-13.887635298239047]],[3,"Bip001 R Finger0",33554432,7,[-243],[1,"b2/nuCJKlNWquB8Mam4/Bb",null,null,null,1,0],[1,0.0173563100397587,0.00211559282615781,0.0253975782543421],[3,-0.6858700464525732,-0.32294007903602007,0.06109472692789222,0.6492760730790565],[1,-86.5242007333384,-23.17191398828007,31.48830679237143]],[9,"Bip001 R Finger01",33554432,118,[[30,"Bip001 R Finger0Nub",33554432,-244,[1,"edvhn3XR5HnKmb4E5r3Dxn",null,null,null,1,0],[1,0.0138832563534379,-9.53674295089968e-9,-1.90734859017994e-8],[3,-4.16333634234434e-17,-3.72529029846191e-9,1,1.49011611938477e-8],[1,-1,-1,-1],[1,179.99999957311317,-180,0.000001707547292503193]]],[1,"cemCuLD8hH1qQzuOHd8z7B",null,null,null,1,0],[1,0.0208207126706839,-2.38418573772492e-9,1.90734859017994e-8],[3,1.459139660246614e-8,1.2161972818048248e-8,0.4771798871012386,0.8788056413940735],[1,0.0000014770169063967042,7.838555341090364e-7,57.002754809260416]],[3,"Bip001 R Finger1",33554432,7,[-245],[1,"6fERd6lQVEjadsFQ7PykxD",null,null,null,1,0],[1,0.0459478385746479,0.00128101347945631,0.0214852802455425],[3,-0.061897573107199934,-0.13212052196239077,0.4220679468987211,0.8947466157077784],[1,0.06867573724819989,-16.83186904442592,50.50171420002984]],[9,"Bip001 R Finger11",33554432,120,[[30,"Bip001 R Finger1Nub",33554432,-246,[1,"e6dcB8P7JPJ7KJkj/qcm1M",null,null,null,1,0],[1,0.0170097928494215,9.53674295089968e-9,-3.57627860658738e-9],[3,2.79396772384644e-9,-3.46944695195361e-17,1,7.45058059692383e-9],[1,-1,-1,-1],[1,180,-179.99999967983487,8.537736462515941e-7]]],[1,"59cfyQVpFNL6/mdYB9JCYI",null,null,null,1,0],[1,0.0123886298388243,-9.53674295089968e-9,-8.34465030408182e-9],[3,1.3016712068073666e-8,-1.4455164971072755e-8,0.5144655671093913,0.8575110379807436],[1,0.000004528306998893986,-0.000004648450855668825,61.92347887354176]],[3,"Bip001 R Finger2",33554432,7,[-247],[1,"d0zgA7VJZNIJynm6/jWqHS",null,null,null,1,0],[1,0.0475340150296688,-0.000539741478860378,0.00699821952730417],[3,-0.02115076166038748,-0.06364076417622339,0.4123696278633045,0.9085448741983698],[1,1.2217222000018764,-8.567451528964623,48.76433300000803]],[9,"Bip001 R Finger21",33554432,122,[[30,"Bip001 R Finger2Nub",33554432,-248,[1,"682Uog809LJYCEvztkzF0U",null,null,null,1,0],[1,0.0156214330345392,1.77635679969558e-17,2.38418573772492e-9],[3,-1.14669091999531e-8,-3.72529029846191e-9,1,-1.03949908225187e-16],[1,-1,-1,-1],[1,179.99999957311317,179.999998685989,-7.0167096047109665e-15]]],[1,"61lm73JKlIloU0sJUgshWt",null,null,null,1,0],[1,0.016605643555522,-1.90734859017994e-8,8.88178399847791e-18],[3,-3.4118084042520553e-9,1.6843543290474293e-9,0.5651857278241516,0.8249636919670369],[1,-0.0000011951909898561812,0.0000010527950338491404,68.8303791482051]],[3,"Bip001 R Finger3",33554432,7,[-249],[1,"b38aDRluJG5LFSmPEWnE5j",null,null,null,1,0],[1,0.0483224764466286,0.0012564086355269,-0.00621133809909225],[3,0.07640349030514083,-0.005040920746210231,0.37472700634284406,0.923967946686763],[1,11.579872134889563,-5.289455422031634,43.76492469606519]],[9,"Bip001 R Finger31",33554432,124,[[30,"Bip001 R Finger3Nub",33554432,-250,[1,"7dEiH6P1FMJLA23lMyZmBB",null,null,null,1,0],[1,0.0162049867212772,-1.77635679969558e-17,-1.43051144263495e-8],[3,-5.58793544769287e-9,-6.93889390390723e-17,1,-7.45058059692383e-9],[1,-1,-1,-1],[1,180,179.99999935966977,-8.537736462515941e-7]]],[1,"160D9paiFGz4LHMgyyP8Fz",null,null,null,1,0],[1,0.0142769999802113,-1.90734859017994e-8,1.19209282445354e-8],[3,2.6366390342403233e-8,-2.7351476147398444e-8,0.5393512327170185,0.8420809033380527],[1,0.000010125992549588457,-0.000010207706674533675,65.2789707219127]],[3,"Bip001 R Finger4",33554432,7,[-251],[1,"ddzsscto5JBITLtouvf5Qo",null,null,null,1,0],[1,0.0457702167332172,0.00529300700873137,-0.0185003560036421],[3,0.08578144095463741,0.09440923571967128,0.39869127056686676,0.9081705298964238],[1,6.8802837123895895,8.820653101794221,47.76178811072957]],[9,"Bip001 R Finger41",33554432,126,[[30,"Bip001 R Finger4Nub",33554432,-252,[1,"2cgLjrCEBKMI2otuaQ6XWt",null,null,null,1,0],[1,0.0135041810572147,-9.53674295089968e-9,4.76837147544984e-9],[3,-1.4901161193847696e-8,-1.4901161193847696e-8,0.9999999999999998,-1.4901161193847696e-8],[1,-1,-1,-1],[1,179.9999982924527,179.9999982924527,-0.0000017075472670587547]]],[1,"13Hdi7w/FC3JXmFgZR4R8V",null,null,null,1,0],[1,0.0114022251218557,-9.53674295089968e-9,0],[3,1.9434208458945745e-8,-8.148662889004224e-9,0.3786801310141488,0.9255276108118583],[1,0.000003385777760774283,-0.0000023941962666253603,44.503901746885845]],[9,"Bone001",33554432,37,[[28,"Bone002",33554432,-253,[1,"1dDrp7S55Km5Amz1FGjs+K",null,null,null,1,0],[1,0.114684447646141,-1.90734859017994e-8,-9.53674295089968e-9]]],[1,"502Hp9qqBBP6v74R5bcDoJ",null,null,null,1,0],[1,0.26905032992363,-0.0650635361671448,-0.127943128347397],[3,-0.697618412772017,0.31653382824268933,0.11544779487541121,0.6323026904876211],[1,-89.99995719813882,35.98941167621442,-17.196143510194055]],[102,"Bone003",33554432,37,[[27,"Bone004",33554432,-254,[1,"2fFT3A+IdPSYdg3BxlrmFV",null,null,null,1,0],[1,0.114684328436852,-3.81469718035987e-8,-5.32907039908674e-17],[1,8.537736335293723e-7,-8.537737353071238e-7,-0.0000017075475024197975]]],[1,"ebappPFsNDbYt6sAv/4p0+",null,null,null,1,0],[1,0.269050478935242,-0.0650639086961746,0.129175424575806],[3,0.316533531957848,0.6976191914636558,-0.6323020979137374,0.11544714730893722],[1,-1,-1,-1],[1,89.99993041241645,144.01068359376416,17.196205605104762]],[3,"Bip001 L Thigh",33554432,35,[-255],[1,"08txYeKqVAW433X9ZgTlAj",null,null,null,1,0],[1,-0.0460067354142666,-0.00446621421724558,0.0521033070981503],[3,0.38403078543917485,0.9021414431491946,0.15767294016653965,-0.11747517323629636],[1,-29.761134723333683,-153.8191212787649,40.984501947693744]],[3,"Bip001 L Calf",33554432,130,[-256],[1,"cbhrwFHmBG6bxYmoGB/A2+",null,null,null,1,0],[1,0.0757822841405869,-9.53674295089968e-9,-9.53674295089968e-9],[3,7.184563150804615e-18,-3.394242627735341e-17,-0.421329552834213,0.9069076071510933],[1,-1.3832109294938618e-15,-4.931376858443895e-15,-49.83711241550995]],[3,"Bip001 L Foot",33554432,131,[-257],[1,"1eN/ArxLFGFLSqKEGa1sIl",null,null,null,1,0],[1,0.0684369280934334,7.15255721317476e-9,4.76837147544984e-9],[3,-0.0002319900031537884,-0.07603637695132737,0.11526136574018889,0.9904207354091797],[1,1.0045485977160633,-8.896409374016315,13.199935410760402]],[3,"Bip001 L Toe0",33554432,132,[-258],[1,"ac+iO3yPJIm7E4wwJLKQjs",null,null,null,1,0],[1,0.0584012679755688,0.075159877538681,0],[3,-0.0690979579256324,0.06909778656228005,0.703722828685007,0.703722351847853],[1,-90.00020467211837,90.00019072003414,78.78431211806877]],[62,"Bip001 L Toe01",33554432,133,[-259],[1,"4aclju0LFIDaKJ5qA1ffyw",null,null,null,1,0],[1,0.00761755928397179,9.31322553798797e-12,-9.53674295089968e-9]],[42,"Bip001 L Toe02",33554432,134,[[30,"Bip001 L Toe0Nub",33554432,-260,[1,"1dKaFZ7T1FtbWyuip+fiEf",null,null,null,1,0],[1,0.00761755928397179,-1.73472343720272e-20,-1.77635679969558e-17],[3,2.77555756156289e-17,1.40254901927048e-32,1,-5.05321539244431e-16],[1,-1,-1,-1],[1,-180,-180,-5.790558299152059e-14]]],[1,"04f+B1iSBFS6PCsR6n4MxK",null,null,null,1,0],[1,0.00761754019185901,-9.31322553798797e-12,4.76837147544984e-9]],[3,"Bip001 R Thigh",33554432,35,[-261],[1,"0c9PN8Ky5LzqS8F2QLCOM+",null,null,null,1,0],[1,-0.0459612458944321,-0.00451898341998458,-0.0526593923568726],[3,0.08051530427583212,0.9842654657105826,-0.13151845590477243,0.08626514095116798],[1,15.982299591965985,168.88492681430296,7.805226680600075]],[3,"Bip001 R Calf",33554432,136,[-262],[1,"1cDnBFn/hEdqBtFo2SixNz",null,null,null,1,0],[1,0.0757822766900063,4.76837147544984e-9,0],[3,4.398540958772404e-17,4.3785202095950535e-17,-0.318390913862047,0.9479595065033583],[1,7.996886321450047e-15,7.978769623068548e-15,-37.13128410819074]],[3,"Bip001 R Foot",33554432,137,[-263],[1,"ef+Ev2ZJlDvKMV3oDe0RoA",null,null,null,1,0],[1,0.0684369131922722,0,0],[3,-0.003373036438918992,0.10993968842149437,0.3145782393483698,0.9428374297106825],[1,-5.379670634274404,15.068214467422063,36.3311048910324]],[3,"Bip001 R Toe0",33554432,138,[-264],[1,"3du5ntY7ROhYW7vgx5sr3I",null,null,null,1,0],[1,0.0584012679755688,0.0751598700881004,-4.76837147544984e-9],[3,-0.0778719335363982,0.07787177707420567,0.70280587634337,0.7028056975294351],[1,-90.00007216070834,90.000059405231,77.35467675057572]],[62,"Bip001 R Toe01",33554432,139,[-265],[1,"7aPUdS5rdJDIoLJi+nEL/t",null,null,null,1,0],[1,0.00761754950508475,1.73472343720272e-20,1.77635679969558e-17]],[42,"Bip001 R Toe02",33554432,140,[[28,"Bip001 R Toe0Nub",33554432,-266,[1,"a0Gi/UewBJ/p3anClrDj/t",null,null,null,1,0],[1,0.00761754950508475,1.73472343720272e-20,-9.53674295089968e-9]]],[1,"44IEwT+BxMobwiopbJuURB",null,null,null,1,0],[1,0.00761755462735891,1.73472343720272e-20,9.53674295089968e-9]],[91,true,13,[2,"d46h3B2Q1HvbQCfDp2X+Qr"],[33]],[5,["4f0nQ9IPtLD5zWdoK5AdJC"]],[5,["8eSplclQRJBq1e84gVQ+pL"]]],0,[0,-1,2,0,-2,3,0,6,3,0,6,3,0,8,51,0,6,2,0,8,51,0,6,2,0,8,2,0,6,2,0,8,2,0,6,2,0,8,2,0,6,2,0,8,2,0,12,1,0,0,1,0,0,1,0,-3,51,0,0,1,0,-1,3,0,-2,48,0,-3,49,0,-4,5,0,-5,11,0,-6,13,0,-7,2,0,3,15,0,3,15,0,3,15,0,3,15,0,3,15,0,3,15,0,3,143,0,3,144,0,3,144,0,3,143,0,12,2,0,3,21,0,3,21,0,3,21,0,3,21,0,3,21,0,3,58,0,3,58,0,-1,16,0,-1,8,0,-2,17,0,-3,24,0,-1,10,0,-2,4,0,12,3,0,0,4,0,0,4,0,-1,20,0,-2,27,0,0,5,0,0,5,0,20,5,0,0,5,0,0,5,0,-1,73,0,-2,74,0,-3,75,0,-4,76,0,-5,77,0,1,6,0,-1,118,0,-2,120,0,-3,122,0,-4,124,0,-5,126,0,1,7,0,0,8,0,0,8,0,-1,43,0,0,9,0,0,9,0,-2,17,0,-3,24,0,0,10,0,0,10,0,-1,47,0,-1,98,0,15,98,0,0,11,0,-1,29,0,-1,65,0,-2,66,0,-3,67,0,-4,68,0,-5,69,0,-1,142,0,15,142,0,0,13,0,-1,33,0,-1,105,0,-2,107,0,-3,109,0,-4,111,0,-5,113,0,0,16,0,-2,52,0,0,16,0,0,17,0,-1,18,0,0,18,0,0,18,0,-1,40,0,-2,41,0,0,19,0,0,19,0,0,20,0,0,20,0,-1,45,0,-2,46,0,0,22,0,-2,39,0,-3,23,0,-1,53,0,0,23,0,0,23,0,0,24,0,-1,42,0,0,25,0,-2,44,0,-3,26,0,0,26,0,0,26,0,0,26,0,0,27,0,0,27,0,-1,28,0,0,28,0,-2,57,0,0,28,0,-1,59,0,-2,32,0,1,29,0,-1,61,0,-2,88,0,-3,93,0,-1,62,0,-2,70,0,-3,50,0,0,32,0,0,32,0,0,32,0,-1,34,0,-2,99,0,1,33,0,0,34,0,0,34,0,0,34,0,-1,101,0,-2,130,0,-3,136,0,-1,102,0,-2,115,0,-3,37,0,1,37,0,-2,128,0,-3,129,0,0,38,0,0,38,0,0,39,0,0,39,0,0,40,0,0,40,0,0,41,0,-2,54,0,0,42,0,-2,55,0,0,43,0,0,43,0,0,44,0,0,44,0,0,45,0,0,45,0,0,46,0,-2,56,0,0,47,0,0,47,0,0,48,0,0,49,0,-1,78,0,-2,83,0,-1,54,0,-2,56,0,-1,55,0,-2,57,0,9,53,0,-1,60,0,-1,63,0,-1,64,0,1,65,0,1,66,0,1,67,0,1,68,0,1,69,0,-1,71,0,-1,72,0,1,73,0,1,74,0,1,75,0,1,76,0,1,77,0,-1,79,0,-1,80,0,-1,81,0,-1,82,0,1,82,0,-1,84,0,-1,85,0,-1,86,0,-1,87,0,1,87,0,-1,89,0,-1,90,0,-1,91,0,-1,92,0,1,92,0,-1,94,0,-1,95,0,-1,96,0,-1,97,0,1,97,0,-1,100,0,-1,103,0,-1,104,0,-1,106,0,1,106,0,-1,108,0,1,108,0,-1,110,0,1,110,0,-1,112,0,1,112,0,-1,114,0,1,114,0,-1,116,0,-1,117,0,-1,119,0,1,119,0,-1,121,0,1,121,0,-1,123,0,1,123,0,-1,125,0,1,125,0,-1,127,0,1,127,0,1,128,0,1,129,0,-1,131,0,-1,132,0,-1,133,0,-1,134,0,-1,135,0,1,135,0,-1,137,0,-1,138,0,-1,139,0,-1,140,0,-1,141,0,1,141,0,14,1,4,1,19,6,1,72,7,1,117,8,1,9,9,1,22,10,1,19,12,1,64,14,1,104,16,1,38,19,1,25,30,1,60,31,1,61,35,1,100,36,1,101,51,21,52,266],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,56,98,142],[16,2,2,-1,4,5,2,2,2,2,-1,10,2,-1,4,5,2,2,2,2,-1,10,2,22,-1,-2,13,17,-1,-1,-2,13,17,-1,16,-1,-2,2,2,10,10],[26,9,2,0,0,1,27,10,3,11,4,4,2,0,0,1,28,10,3,11,4,4,12,12,13,13,29,30,14,15,15,31,32,16,33,17,18,17,18,14,16]],[[[58,"boyUI",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[11,7],[34,35]],[[[124,"../res/effect/vsAni/uvMove36",[{"hash":1739686027,"name":"../res/effect/vsAni/uvMove36|unlit-vs:vert|unlit-fs:frag","blocks":[{"name":"TexCoords","stageFlags":1,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1}],"defines":["USE_TEXTURE"]},{"name":"TexMCoords","stageFlags":1,"binding":1,"members":[{"name":"maskTilingOffset","type":16,"count":1}],"defines":["USE_MASK_COLOR"]},{"name":"ConstTextureMove","stageFlags":16,"binding":2,"members":[{"name":"textureMoveSpeed","type":14,"count":1}],"defines":["USE_TEXTURE_MOVE"]},{"name":"ConstNoiseTexture","stageFlags":16,"binding":3,"members":[{"name":"noiseStrength","type":14,"count":1}],"defines":["USE_NOISE_TEXTURE"]},{"name":"ConstNoiseMove","stageFlags":16,"binding":4,"members":[{"name":"noiseMoveSpeed","type":14,"count":1}],"defines":["USE_NOISE_MOVE"]},{"name":"Constant","stageFlags":16,"binding":5,"members":[{"name":"mainColor","type":16,"count":1},{"name":"colorScaleAndCutoff","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":6,"defines":["USE_TEXTURE"]},{"name":"noiseTexture","type":28,"count":1,"stageFlags":16,"binding":7,"defines":["USE_NOISE_TEXTURE"]},{"name":"maskTexture","type":28,"count":1,"stageFlags":16,"binding":8,"defines":["USE_MASK_COLOR"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_normal","format":32,"location":1,"defines":[]},{"name":"a_texCoord","format":21,"location":2,"defines":[]},{"name":"a_tangent","format":44,"location":3,"defines":[]},{"name":"a_joints","location":4,"defines":["CC_USE_SKINNING"]},{"name":"a_weights","format":44,"location":5,"defines":["CC_USE_SKINNING"]},{"name":"a_jointAnimInfo","format":44,"isInstanced":true,"location":6,"defines":["USE_INSTANCING","CC_USE_BAKED_ANIMATION"]},{"name":"a_matWorld0","format":44,"isInstanced":true,"location":7,"defines":["USE_INSTANCING"]},{"name":"a_matWorld1","format":44,"isInstanced":true,"location":8,"defines":["USE_INSTANCING"]},{"name":"a_matWorld2","format":44,"isInstanced":true,"location":9,"defines":["USE_INSTANCING"]},{"name":"a_lightingMapUVParam","format":44,"isInstanced":true,"location":10,"defines":["USE_INSTANCING","CC_USE_LIGHTMAP"]},{"name":"a_localShadowBiasAndProbeId","format":44,"isInstanced":true,"location":11,"defines":["USE_INSTANCING"]},{"name":"a_reflectionProbeData","format":44,"isInstanced":true,"location":12,"defines":["USE_INSTANCING","CC_USE_REFLECTION_PROBE"]},{"name":"a_sh_linear_const_r","format":44,"isInstanced":true,"location":13,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_g","format":44,"isInstanced":true,"location":14,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_sh_linear_const_b","format":44,"isInstanced":true,"location":15,"defines":["USE_INSTANCING","CC_USE_LIGHT_PROBE"]},{"name":"a_vertexId","format":11,"location":16,"defines":["CC_USE_MORPH"]},{"name":"a_color","format":44,"location":17,"defines":["USE_VERTEX_COLOR"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"descriptors":[{"rate":0,"blocks":[{"name":"CCMorph","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_displacementWeights","typename":"vec4","type":16,"count":15,"isArray":true},{"name":"cc_displacementTextureInfo","typename":"vec4","type":16,"count":1}],"defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_jointTextureInfo","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_jointAnimInfo","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_joints","typename":"vec4","type":16,"count":0,"precision":"highp ","isArray":true}],"defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"CCLocal","stageFlags":1,"tags":{"builtin":"local"},"members":[{"name":"cc_matWorld","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matWorldIT","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_lightingMapUVParam","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_localShadowBias","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeData2","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData1","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_reflectionProbeBlendData2","typename":"vec4","type":16,"count":1,"precision":"highp "}],"defines":["!USE_INSTANCING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","typename":"sampler2D","type":28,"count":1,"stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","typename":"sampler2D","type":28,"count":1,"precision":"highp ","stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","typename":"sampler2D","type":28,"count":1,"precision":"highp ","stageFlags":1,"tags":{"builtin":"local"},"defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":1,"blocks":[{"name":"TexCoords","stageFlags":1,"binding":0,"members":[{"name":"tilingOffset","type":16,"count":1}],"defines":["USE_TEXTURE"]},{"name":"TexMCoords","stageFlags":1,"binding":1,"members":[{"name":"maskTilingOffset","type":16,"count":1}],"defines":["USE_MASK_COLOR"]},{"name":"ConstTextureMove","stageFlags":16,"binding":2,"members":[{"name":"textureMoveSpeed","type":14,"count":1}],"defines":["USE_TEXTURE_MOVE"]},{"name":"ConstNoiseTexture","stageFlags":16,"binding":3,"members":[{"name":"noiseStrength","type":14,"count":1}],"defines":["USE_NOISE_TEXTURE"]},{"name":"ConstNoiseMove","stageFlags":16,"binding":4,"members":[{"name":"noiseMoveSpeed","type":14,"count":1}],"defines":["USE_NOISE_MOVE"]},{"name":"Constant","stageFlags":16,"binding":5,"members":[{"name":"mainColor","type":16,"count":1},{"name":"colorScaleAndCutoff","type":16,"count":1}],"defines":[]}],"samplerTextures":[{"name":"mainTexture","type":28,"count":1,"stageFlags":16,"binding":6,"defines":["USE_TEXTURE"]},{"name":"noiseTexture","type":28,"count":1,"stageFlags":16,"binding":7,"defines":["USE_NOISE_TEXTURE"]},{"name":"maskTexture","type":28,"count":1,"stageFlags":16,"binding":8,"defines":["USE_MASK_COLOR"]}],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":2,"blocks":[],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]},{"rate":3,"blocks":[{"name":"CCGlobal","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_time","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_screenSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nativeSize","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_probeInfo","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_debug_view_mode","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]},{"name":"CCCamera","stageFlags":17,"tags":{"builtin":"global"},"members":[{"name":"cc_matView","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProj","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_matViewProjInv","typename":"mat4","type":25,"count":1,"precision":"highp "},{"name":"cc_cameraPos","typename":"vec4","type":16,"count":1,"precision":"highp "},{"name":"cc_surfaceTransform","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_screenScale","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_exposure","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitDir","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_mainLitColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientSky","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_ambientGround","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogColor","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogBase","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_fogAdd","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_nearFar","typename":"vec4","type":16,"count":1,"precision":"mediump "},{"name":"cc_viewPort","typename":"vec4","type":16,"count":1,"precision":"mediump "}],"defines":[]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[]}],"glsl3":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nin vec3 a_position;\nin vec3 a_normal;\nin vec2 a_texCoord;\nin vec4 a_tangent;\n#if CC_USE_SKINNING\n    in vec4 a_joints;\n  in vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    in highp vec4 a_jointAnimInfo;\n  #endif\n  in vec4 a_matWorld0;\n  in vec4 a_matWorld1;\n  in vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    in vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    in vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    in vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    in vec4 a_sh_linear_const_r;\n    in vec4 a_sh_linear_const_g;\n    in vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    in float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\n#if CC_USE_MORPH\n  layout(std140) uniform CCMorph {\n    vec4 cc_displacementWeights[15];\n    vec4 cc_displacementTextureInfo;\n  };\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int pixelIndex) {\n        ivec2 texSize = textureSize(tex, 0);\n        return texelFetch(tex, ivec2(pixelIndex % texSize.x, pixelIndex / texSize.x), 0);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture(tex, x)),\n        decode32(texture(tex, y)),\n        decode32(texture(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    layout(std140) uniform CCSkinningTexture {\n      highp vec4 cc_jointTextureInfo;\n    };\n    layout(std140) uniform CCSkinningAnimation {\n      highp vec4 cc_jointAnimInfo;\n    };\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      layout(std140) uniform CCSkinning {\n        highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n      };\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout vec4 In)\n{\n    In = vec4(a_position, 1.0);\n  #if CC_USE_MORPH\n    applyMorph(In);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In);\n  #endif\n}\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if !USE_INSTANCING\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n    highp vec4 cc_localShadowBias;\n    highp vec4 cc_reflectionProbeData1;\n    highp vec4 cc_reflectionProbeData2;\n    highp vec4 cc_reflectionProbeBlendData1;\n    highp vec4 cc_reflectionProbeBlendData2;\n  };\n#endif\nvoid CCGetWorldMatrix(out mat4 matWorld)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n  #else\n    matWorld = cc_matWorld;\n  #endif\n}\n#if USE_VERTEX_COLOR\n  in vec4 a_color;\n  out vec4 v_color;\n#endif\nout vec2 v_uv;\n#if USE_TEXTURE\n  layout(std140) uniform TexCoords {\n    vec4 tilingOffset;\n  };\n#endif\n#if USE_MASK_COLOR\n  out vec2 v_uvM;\n  layout(std140) uniform TexMCoords {\n    vec4 maskTilingOffset;\n  };\n#endif\nvec4 vert () {\n  vec4 position;\n  CCVertInput(position);\n  mat4 matWorld;\n  CCGetWorldMatrix(matWorld);\n  vec2 uv = a_texCoord;\n  #if USE_TEXTURE\n    #if FLIP_UV\n      uv.y = 1.0 - v_uv.y;\n    #endif\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n  v_uv = uv * tilingOffset.xy + tilingOffset.zw;\n  #if USE_MASK_COLOR\n    v_uvM = uv * maskTilingOffset.xy + maskTilingOffset.zw;\n  #endif\n  vec4 outPos = cc_matProj * (cc_matView * matWorld) * position;\n  return outPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision mediump float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n  mediump vec4 cc_probeInfo;\n  mediump vec4 cc_debug_view_mode;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_surfaceTransform;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nin vec2 v_uv;\n#if USE_TEXTURE\n  uniform sampler2D mainTexture;\n#endif\n#if USE_TEXTURE_MOVE\n  layout(std140) uniform ConstTextureMove{\n      vec2 textureMoveSpeed;\n  };\n#endif\n#if USE_NOISE_TEXTURE\n  uniform sampler2D noiseTexture;\n  layout(std140) uniform ConstNoiseTexture{\n    vec2 noiseStrength;\n  };\n#endif\n#if USE_NOISE_MOVE\n  layout(std140) uniform ConstNoiseMove{\n    vec2 noiseMoveSpeed;\n  };\n#endif\nlayout(std140) uniform Constant {\n  vec4 mainColor;\n  vec4 colorScaleAndCutoff;\n};\n#if USE_VERTEX_COLOR\n  in vec4 v_color;\n#endif\n#if USE_MASK_COLOR\n  in vec2 v_uvM;\n  uniform sampler2D maskTexture;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 o = mainColor;\n  o.rgb *= colorScaleAndCutoff.xyz;\n  #if USE_VERTEX_COLOR\n    o *= v_color;\n  #endif\n  vec2 uv = v_uv;\n  #if USE_TEXTURE\n      #if USE_TEXTURE_MOVE\n        uv.x = uv.x + fract(cc_time.x * textureMoveSpeed.x);\n        uv.y = uv.y + fract(cc_time.x * textureMoveSpeed.y);\n      #endif\n      #if USE_NOISE_TEXTURE\n        vec2 noise_uv = v_uv;\n        #if USE_NOISE_MOVE\n          vec2 speed = vec2(cc_time.x * noiseMoveSpeed.x ,cc_time.x * noiseMoveSpeed.y);\n          noise_uv.xy = v_uv.xy + fract(speed.xy);\n        #endif\n        vec4 offset = texture(noiseTexture,noise_uv);\n        uv.x = uv.x + (offset.x - 0.5) * noiseStrength.x;\n        uv.y = uv.y + (offset.y - 0.5) * noiseStrength.y;\n      #endif\n      o *= texture(mainTexture, uv);\n  #endif\n  #if USE_MASK_COLOR\n    vec2 uv1 = v_uvM;\n    o *= texture(maskTexture, uv1);\n  #endif\n  #if USE_ALPHA_TEST\n    if (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n  #endif\n  return CCFragOutput(o);\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\n#define QUATER_PI         0.78539816340\n#define HALF_PI           1.57079632679\n#define PI                3.14159265359\n#define PI2               6.28318530718\n#define PI4               12.5663706144\n#define INV_QUATER_PI     1.27323954474\n#define INV_HALF_PI       0.63661977237\n#define INV_PI            0.31830988618\n#define INV_PI2           0.15915494309\n#define INV_PI4           0.07957747155\n#define EPSILON           1e-6\n#define EPSILON_LOWP      1e-4\n#define LOG2              1.442695\n#define EXP_VALUE         2.71828183\n#define FP_MAX            65504.0\n#define FP_SCALE          0.0009765625\n#define FP_SCALE_INV      1024.0\n#define GRAY_VECTOR       vec3(0.299, 0.587, 0.114)\n#define LIGHT_MAP_TYPE_DISABLED 0\n#define LIGHT_MAP_TYPE_ALL_IN_ONE 1\n#define LIGHT_MAP_TYPE_INDIRECT_OCCLUSION 2\n#define REFLECTION_PROBE_TYPE_NONE 0\n#define REFLECTION_PROBE_TYPE_CUBE 1\n#define REFLECTION_PROBE_TYPE_PLANAR 2\n#define REFLECTION_PROBE_TYPE_BLEND 3\n#define REFLECTION_PROBE_TYPE_BLEND_AND_SKYBOX 4\n#define LIGHT_TYPE_DIRECTIONAL 0.0\n#define LIGHT_TYPE_SPHERE 1.0\n#define LIGHT_TYPE_SPOT 2.0\n#define LIGHT_TYPE_POINT 3.0\n#define LIGHT_TYPE_RANGED_DIRECTIONAL 4.0\n#define IS_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_DIRECTIONAL)) < EPSILON_LOWP)\n#define IS_SPHERE_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPHERE)) < EPSILON_LOWP)\n#define IS_SPOT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_SPOT)) < EPSILON_LOWP)\n#define IS_POINT_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_POINT)) < EPSILON_LOWP)\n#define IS_RANGED_DIRECTIONAL_LIGHT(light_type) (abs(float(light_type) - float(LIGHT_TYPE_RANGED_DIRECTIONAL)) < EPSILON_LOWP)\n#define TONE_MAPPING_ACES 0\n#define TONE_MAPPING_LINEAR 1\n#define SURFACES_MAX_TRANSMIT_DEPTH_VALUE 999999.0\n#ifndef CC_SURFACES_DEBUG_VIEW_SINGLE\n  #define CC_SURFACES_DEBUG_VIEW_SINGLE 1\n#endif\n#ifndef CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC\n  #define CC_SURFACES_DEBUG_VIEW_COMPOSITE_AND_MISC 2\n#endif\nstruct StandardVertInput {\n  highp vec4 position;\n  vec3 normal;\n  vec4 tangent;\n};\nattribute vec3 a_position;\nattribute vec3 a_normal;\nattribute vec2 a_texCoord;\nattribute vec4 a_tangent;\n#if CC_USE_SKINNING\n    attribute vec4 a_joints;\n  attribute vec4 a_weights;\n#endif\n#if USE_INSTANCING\n  #if CC_USE_BAKED_ANIMATION\n    attribute highp vec4 a_jointAnimInfo;\n  #endif\n  attribute vec4 a_matWorld0;\n  attribute vec4 a_matWorld1;\n  attribute vec4 a_matWorld2;\n  #if CC_USE_LIGHTMAP\n    attribute vec4 a_lightingMapUVParam;\n  #endif\n  #if CC_USE_REFLECTION_PROBE || CC_RECEIVE_SHADOW\n    #if CC_RECEIVE_SHADOW\n    #endif\n    attribute vec4 a_localShadowBiasAndProbeId;\n  #endif\n  #if CC_USE_REFLECTION_PROBE\n    attribute vec4 a_reflectionProbeData;\n  #endif\n  #if CC_USE_LIGHT_PROBE\n    attribute vec4 a_sh_linear_const_r;\n    attribute vec4 a_sh_linear_const_g;\n    attribute vec4 a_sh_linear_const_b;\n  #endif\n#endif\n#if CC_USE_MORPH\n    attribute float a_vertexId;\n    int getVertexId() {\n      return int(a_vertexId);\n    }\n#endif\nhighp float decode32 (highp vec4 rgba) {\n  rgba = rgba * 255.0;\n  highp float Sign = 1.0 - (step(128.0, (rgba[3]) + 0.5)) * 2.0;\n  highp float Exponent = 2.0 * (mod(float(int((rgba[3]) + 0.5)), 128.0)) + (step(128.0, (rgba[2]) + 0.5)) - 127.0;\n  highp float Mantissa = (mod(float(int((rgba[2]) + 0.5)), 128.0)) * 65536.0 + rgba[1] * 256.0 + rgba[0] + 8388608.0;\n  return Sign * exp2(Exponent - 23.0) * Mantissa;\n}\n#if CC_USE_MORPH\n  uniform vec4 cc_displacementWeights[15];\n  uniform vec4 cc_displacementTextureInfo;\n  #if CC_MORPH_TARGET_HAS_POSITION\n    uniform sampler2D cc_PositionDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    uniform sampler2D cc_NormalDisplacements;\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    uniform sampler2D cc_TangentDisplacements;\n  #endif\n  vec2 getPixelLocation(vec2 textureResolution, int pixelIndex) {\n    float pixelIndexF = float(pixelIndex);\n    float x = mod(pixelIndexF, textureResolution.x);\n    float y = floor(pixelIndexF / textureResolution.x);\n    return vec2(x, y);\n  }\n  vec2 getPixelCoordFromLocation(vec2 location, vec2 textureResolution) {\n    return (vec2(location.x, location.y) + .5) / textureResolution;\n  }\n  #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n        int pixelIndex = elementIndex;\n        vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n        vec2 uv = getPixelCoordFromLocation(location, cc_displacementTextureInfo.xy);\n        return texture2D(tex, uv);\n      }\n  #else\n    vec4 fetchVec3ArrayFromTexture(sampler2D tex, int elementIndex) {\n      int pixelIndex = elementIndex * 4;\n      vec2 location = getPixelLocation(cc_displacementTextureInfo.xy, pixelIndex);\n      vec2 x = getPixelCoordFromLocation(location + vec2(0.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 y = getPixelCoordFromLocation(location + vec2(1.0, 0.0), cc_displacementTextureInfo.xy);\n      vec2 z = getPixelCoordFromLocation(location + vec2(2.0, 0.0), cc_displacementTextureInfo.xy);\n      return vec4(\n        decode32(texture2D(tex, x)),\n        decode32(texture2D(tex, y)),\n        decode32(texture2D(tex, z)),\n        1.0\n      );\n    }\n  #endif\n  float getDisplacementWeight(int index) {\n    int quot = index / 4;\n    int remainder = index - quot * 4;\n    if (remainder == 0) {\n      return cc_displacementWeights[quot].x;\n    } else if (remainder == 1) {\n      return cc_displacementWeights[quot].y;\n    } else if (remainder == 2) {\n      return cc_displacementWeights[quot].z;\n    } else {\n      return cc_displacementWeights[quot].w;\n    }\n  }\n  vec3 getVec3DisplacementFromTexture(sampler2D tex, int vertexIndex) {\n  #if CC_MORPH_PRECOMPUTED\n    return fetchVec3ArrayFromTexture(tex, vertexIndex).rgb;\n  #else\n    vec3 result = vec3(0, 0, 0);\n    int nVertices = int(cc_displacementTextureInfo.z);\n    for (int iTarget = 0; iTarget < CC_MORPH_TARGET_COUNT; ++iTarget) {\n      result += (fetchVec3ArrayFromTexture(tex, nVertices * iTarget + vertexIndex).rgb * getDisplacementWeight(iTarget));\n    }\n    return result;\n  #endif\n  }\n  #if CC_MORPH_TARGET_HAS_POSITION\n  vec3 getPositionDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_PositionDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n  vec3 getNormalDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_NormalDisplacements, vertexId);\n  }\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n  vec3 getTangentDisplacement(int vertexId) {\n      return getVec3DisplacementFromTexture(cc_TangentDisplacements, vertexId);\n  }\n  #endif\n  void applyMorph (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    int vertexId = getVertexId();\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_NORMAL\n    normal.xyz = normal.xyz + getNormalDisplacement(vertexId);\n  #endif\n  #if CC_MORPH_TARGET_HAS_TANGENT\n    tangent.xyz = tangent.xyz + getTangentDisplacement(vertexId);\n  #endif\n  }\n  void applyMorph (inout vec4 position) {\n  #if CC_MORPH_TARGET_HAS_POSITION\n    position.xyz = position.xyz + getPositionDisplacement(getVertexId());\n  #endif\n  }\n#endif\n#if CC_USE_SKINNING\n  #if CC_USE_BAKED_ANIMATION\n    uniform highp vec4 cc_jointTextureInfo;\n    uniform highp vec4 cc_jointAnimInfo;\n    uniform highp sampler2D cc_jointTexture;\n    void CCGetJointTextureCoords(float pixelsPerJoint, float jointIdx, out highp float x, out highp float y, out highp float invSize)\n    {\n      #if USE_INSTANCING\n        highp float temp = pixelsPerJoint * (a_jointAnimInfo.x * a_jointAnimInfo.y + jointIdx) + a_jointAnimInfo.z;\n      #else\n        highp float temp = pixelsPerJoint * (cc_jointAnimInfo.x * cc_jointTextureInfo.y + jointIdx) + cc_jointTextureInfo.z;\n      #endif\n      invSize = cc_jointTextureInfo.w;\n      highp float tempY = floor(temp * invSize);\n      x = floor(temp - tempY * cc_jointTextureInfo.x);\n      y = (tempY + 0.5) * invSize;\n    }\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      uniform highp sampler2D cc_realtimeJoint;\n    #else\n      uniform highp vec4 cc_joints[CC_JOINT_UNIFORM_CAPACITY * 3];\n    #endif\n  #endif\n  #if CC_USE_BAKED_ANIMATION\n    #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(3.0, i, x, y, invSize);\n        vec4 v1 = texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y));\n        vec4 v2 = texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y));\n        vec4 v3 = texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y));\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #else\n      mat4 getJointMatrix (float i) {\n        highp float x, y, invSize;\n        CCGetJointTextureCoords(12.0, i, x, y, invSize);\n        vec4 v1 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 0.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 1.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 2.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 3.5) * invSize, y)))\n        );\n        vec4 v2 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 4.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 5.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 6.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 7.5) * invSize, y)))\n        );\n        vec4 v3 = vec4(\n          decode32(texture2D(cc_jointTexture, vec2((x + 8.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 9.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 10.5) * invSize, y))),\n          decode32(texture2D(cc_jointTexture, vec2((x + 11.5) * invSize, y)))\n        );\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #else\n    #if CC_USE_REAL_TIME_JOINT_TEXTURE\n      #if CC_DEVICE_SUPPORT_FLOAT_TEXTURE\n        mat4 getJointMatrix (float i) {\n          float x = i;\n          vec4 v1 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 0.5 / 3.0));\n          vec4 v2 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 1.5 / 3.0));\n          vec4 v3 = texture2D(cc_realtimeJoint, vec2( x / 256.0, 2.5 / 3.0));\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #else\n        mat4 getJointMatrix (float i) {\n         float x = 4.0 * i;\n          vec4 v1 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 0.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 0.5 / 3.0)))\n          );\n          vec4 v2 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 1.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 1.5 / 3.0)))\n          );\n          vec4 v3 = vec4(\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 0.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 1.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 2.5)/ 1024.0, 2.5 / 3.0))),\n            decode32(texture2D(cc_realtimeJoint, vec2((x + 3.5)/ 1024.0, 2.5 / 3.0)))\n          );\n          return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n        }\n      #endif\n    #else\n      mat4 getJointMatrix (float i) {\n        int idx = int(i);\n        vec4 v1 = cc_joints[idx * 3];\n        vec4 v2 = cc_joints[idx * 3 + 1];\n        vec4 v3 = cc_joints[idx * 3 + 2];\n        return mat4(vec4(v1.xyz, 0.0), vec4(v2.xyz, 0.0), vec4(v3.xyz, 0.0), vec4(v1.w, v2.w, v3.w, 1.0));\n      }\n    #endif\n  #endif\n  mat4 skinMatrix () {\n    vec4 joints = vec4(a_joints);\n    return getJointMatrix(joints.x) * a_weights.x\n         + getJointMatrix(joints.y) * a_weights.y\n         + getJointMatrix(joints.z) * a_weights.z\n         + getJointMatrix(joints.w) * a_weights.w;\n  }\n  void CCSkin (inout vec4 position) {\n    mat4 m = skinMatrix();\n    position = m * position;\n  }\n  void CCSkin (inout vec4 position, inout vec3 normal, inout vec4 tangent) {\n    mat4 m = skinMatrix();\n    position = m * position;\n    normal = (m * vec4(normal, 0.0)).xyz;\n    tangent.xyz = (m * vec4(tangent.xyz, 0.0)).xyz;\n  }\n#endif\nvoid CCVertInput(inout vec4 In)\n{\n    In = vec4(a_position, 1.0);\n  #if CC_USE_MORPH\n    applyMorph(In);\n  #endif\n  #if CC_USE_SKINNING\n    CCSkin(In);\n  #endif\n}\nuniform highp mat4 cc_matView;\n  uniform highp mat4 cc_matProj;\n#if !USE_INSTANCING\n  uniform highp mat4 cc_matWorld;\n#endif\nvoid CCGetWorldMatrix(out mat4 matWorld)\n{\n  #if USE_INSTANCING\n    matWorld = mat4(\n      vec4(a_matWorld0.xyz, 0.0),\n      vec4(a_matWorld1.xyz, 0.0),\n      vec4(a_matWorld2.xyz, 0.0),\n      vec4(a_matWorld0.w, a_matWorld1.w, a_matWorld2.w, 1.0)\n    );\n  #else\n    matWorld = cc_matWorld;\n  #endif\n}\n#if USE_VERTEX_COLOR\n  attribute vec4 a_color;\n  varying vec4 v_color;\n#endif\nvarying vec2 v_uv;\n#if USE_TEXTURE\n      uniform vec4 tilingOffset;\n#endif\n#if USE_MASK_COLOR\n  varying vec2 v_uvM;\n      uniform vec4 maskTilingOffset;\n#endif\nvec4 vert () {\n  vec4 position;\n  CCVertInput(position);\n  mat4 matWorld;\n  CCGetWorldMatrix(matWorld);\n  vec2 uv = a_texCoord;\n  #if USE_TEXTURE\n    #if FLIP_UV\n      uv.y = 1.0 - v_uv.y;\n    #endif\n  #endif\n  #if USE_VERTEX_COLOR\n    v_color = a_color;\n  #endif\n  v_uv = uv * tilingOffset.xy + tilingOffset.zw;\n  #if USE_MASK_COLOR\n    v_uvM = uv * maskTilingOffset.xy + maskTilingOffset.zw;\n  #endif\n  vec4 outPos = cc_matProj * (cc_matView * matWorld) * position;\n  return outPos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision mediump float;\nuniform highp vec4 cc_time;\nvec4 CCFragOutput (vec4 color) {\n  return color;\n}\nvarying vec2 v_uv;\n#if USE_TEXTURE\n  uniform sampler2D mainTexture;\n#endif\n#if USE_TEXTURE_MOVE\n        uniform vec2 textureMoveSpeed;\n#endif\n#if USE_NOISE_TEXTURE\n  uniform sampler2D noiseTexture;\n      uniform vec2 noiseStrength;\n#endif\n#if USE_NOISE_MOVE\n      uniform vec2 noiseMoveSpeed;\n#endif\n   uniform vec4 mainColor;\n   uniform vec4 colorScaleAndCutoff;\n#if USE_VERTEX_COLOR\n  varying vec4 v_color;\n#endif\n#if USE_MASK_COLOR\n  varying vec2 v_uvM;\n  uniform sampler2D maskTexture;\n#endif\n#if USE_ALPHA_TEST\n#endif\nvec4 frag () {\n  vec4 o = mainColor;\n  o.rgb *= colorScaleAndCutoff.xyz;\n  #if USE_VERTEX_COLOR\n    o *= v_color;\n  #endif\n  vec2 uv = v_uv;\n  #if USE_TEXTURE\n      #if USE_TEXTURE_MOVE\n        uv.x = uv.x + fract(cc_time.x * textureMoveSpeed.x);\n        uv.y = uv.y + fract(cc_time.x * textureMoveSpeed.y);\n      #endif\n      #if USE_NOISE_TEXTURE\n        vec2 noise_uv = v_uv;\n        #if USE_NOISE_MOVE\n          vec2 speed = vec2(cc_time.x * noiseMoveSpeed.x ,cc_time.x * noiseMoveSpeed.y);\n          noise_uv.xy = v_uv.xy + fract(speed.xy);\n        #endif\n        vec4 offset = texture2D(noiseTexture,noise_uv);\n        uv.x = uv.x + (offset.x - 0.5) * noiseStrength.x;\n        uv.y = uv.y + (offset.y - 0.5) * noiseStrength.y;\n      #endif\n      o *= texture2D(mainTexture, uv);\n  #endif\n  #if USE_MASK_COLOR\n    vec2 uv1 = v_uvM;\n    o *= texture2D(maskTexture, uv1);\n  #endif\n  #if USE_ALPHA_TEST\n    if (o.ALPHA_TEST_CHANNEL < colorScaleAndCutoff.w) discard;\n  #endif\n  return CCFragOutput(o);\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCMorph","defines":["CC_USE_MORPH"]},{"name":"CCSkinningTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinningAnimation","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"CCSkinning","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","!CC_USE_REAL_TIME_JOINT_TEXTURE"]},{"name":"CCLocal","defines":["!USE_INSTANCING"]}],"samplerTextures":[{"name":"cc_PositionDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_POSITION"]},{"name":"cc_NormalDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_NORMAL"]},{"name":"cc_TangentDisplacements","defines":["CC_USE_MORPH","CC_MORPH_TARGET_HAS_TANGENT"]},{"name":"cc_jointTexture","defines":["CC_USE_SKINNING","CC_USE_BAKED_ANIMATION"]},{"name":"cc_realtimeJoint","defines":["CC_USE_SKINNING","!CC_USE_BAKED_ANIMATION","CC_USE_REAL_TIME_JOINT_TEXTURE"]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":76,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":47}},"defines":[{"name":"USE_INSTANCING","type":"boolean"},{"name":"CC_USE_SKINNING","type":"boolean"},{"name":"CC_USE_BAKED_ANIMATION","type":"boolean"},{"name":"CC_USE_LIGHTMAP","type":"boolean"},{"name":"CC_USE_REFLECTION_PROBE","type":"boolean"},{"name":"CC_RECEIVE_SHADOW","type":"boolean"},{"name":"CC_USE_LIGHT_PROBE","type":"boolean"},{"name":"CC_USE_MORPH","type":"boolean"},{"name":"CC_MORPH_TARGET_COUNT","type":"number","range":[2,8]},{"name":"CC_MORPH_TARGET_HAS_POSITION","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_NORMAL","type":"boolean"},{"name":"CC_MORPH_TARGET_HAS_TANGENT","type":"boolean"},{"name":"CC_MORPH_PRECOMPUTED","type":"boolean"},{"name":"CC_USE_REAL_TIME_JOINT_TEXTURE","type":"boolean"},{"name":"USE_VERTEX_COLOR","type":"boolean"},{"name":"USE_TEXTURE","type":"boolean"},{"name":"USE_MASK_COLOR","type":"boolean"},{"name":"FLIP_UV","type":"boolean"},{"name":"USE_TEXTURE_MOVE","type":"boolean"},{"name":"USE_NOISE_TEXTURE","type":"boolean"},{"name":"USE_NOISE_MOVE","type":"boolean"},{"name":"USE_ALPHA_TEST","type":"boolean"},{"name":"ALPHA_TEST_CHANNEL","type":"string","options":["a","r","g","b"]}]}],[{"name":"opaque","passes":[{"program":"../res/effect/vsAni/uvMove36|unlit-vs:vert|unlit-fs:frag","properties":{"maskTexture":{"value":"black","type":28},"noiseTexture":{"value":"black","type":28},"mainTexture":{"value":"grey","type":28},"textureMoveSpeed":{"type":14,"value":[0,0]},"tilingOffset":{"type":16,"value":[1,1,0,0]},"maskTilingOffset":{"type":16,"value":[1,1,0,0]},"noiseStrength":{"type":14,"value":[1,1]},"noiseMoveSpeed":{"type":14,"value":[0,0]},"mainColor":{"type":16,"value":[1,1,1,1]},"colorScale":{"type":15,"value":[1,1,1],"handleInfo":["colorScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["colorScaleAndCutoff",3,13]},"color":{"type":16,"handleInfo":["mainColor",0,16]},"colorScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]}}}]},{"name":"transparent","passes":[{"program":"../res/effect/vsAni/uvMove36|unlit-vs:vert|unlit-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"maskTexture":{"value":"black","type":28},"noiseTexture":{"value":"black","type":28},"mainTexture":{"value":"grey","type":28},"textureMoveSpeed":{"type":14,"value":[0,0]},"tilingOffset":{"type":16,"value":[1,1,0,0]},"maskTilingOffset":{"type":16,"value":[1,1,0,0]},"noiseStrength":{"type":14,"value":[1,1]},"noiseMoveSpeed":{"type":14,"value":[0,0]},"mainColor":{"type":16,"value":[1,1,1,1]},"colorScale":{"type":15,"value":[1,1,1],"handleInfo":["colorScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["colorScaleAndCutoff",3,13]},"color":{"type":16,"handleInfo":["mainColor",0,16]},"colorScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]}}}]},{"name":"add","passes":[{"program":"../res/effect/vsAni/uvMove36|unlit-vs:vert|unlit-fs:frag","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":1,"blendSrcAlpha":2,"blendDstAlpha":1}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"maskTexture":{"value":"black","type":28},"noiseTexture":{"value":"black","type":28},"mainTexture":{"value":"grey","type":28},"textureMoveSpeed":{"type":14,"value":[0,0]},"tilingOffset":{"type":16,"value":[1,1,0,0]},"maskTilingOffset":{"type":16,"value":[1,1,0,0]},"noiseStrength":{"type":14,"value":[1,1]},"noiseMoveSpeed":{"type":14,"value":[0,0]},"mainColor":{"type":16,"value":[1,1,1,1]},"colorScale":{"type":15,"value":[1,1,1],"handleInfo":["colorScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["colorScaleAndCutoff",3,13]},"color":{"type":16,"handleInfo":["mainColor",0,16]},"colorScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]}}}]},{"name":"alpha-blend","passes":[{"program":"../res/effect/vsAni/uvMove36|unlit-vs:vert|unlit-fs:frag","rasterizerState":{"cullMode":0},"blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendSrcAlpha":2,"blendDstAlpha":4}]},"depthStencilState":{"depthTest":true,"depthWrite":false},"properties":{"maskTexture":{"value":"black","type":28},"noiseTexture":{"value":"black","type":28},"mainTexture":{"value":"grey","type":28},"textureMoveSpeed":{"type":14,"value":[0,0]},"tilingOffset":{"type":16,"value":[1,1,0,0]},"maskTilingOffset":{"type":16,"value":[1,1,0,0]},"noiseStrength":{"type":14,"value":[1,1]},"noiseMoveSpeed":{"type":14,"value":[0,0]},"mainColor":{"type":16,"value":[1,1,1,1]},"colorScale":{"type":15,"value":[1,1,1],"handleInfo":["colorScaleAndCutoff",0,15]},"alphaThreshold":{"type":13,"value":[0.5],"handleInfo":["colorScaleAndCutoff",3,13]},"color":{"type":16,"handleInfo":["mainColor",0,16]},"colorScaleAndCutoff":{"type":16,"value":[1,1,1,0.5]}}}]}]]],0,0,[],[],[]],[[[51,"VSmodel1",2,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true,"USE_MASK_COLOR":true,"USE_TEXTURE_MOVE":true,"USE_NOISE_TEXTURE":true,"USE_NOISE_MOVE":true}],[[[{},"textureMoveSpeed",8,[0,0.6,0.1],"tilingOffset",8,[2,1.2,2,0,0],"maskTilingOffset",8,[2,1.5,1,-0.4,0],"noiseStrength",8,[0,0.1,0.1],"noiseMoveSpeed",8,[0,-0.3,0.1],"mainColor",8,[4,508165478],"maskTexture",6,0,"noiseTexture",6,1,"mainTexture",6,2]],11]]],0,0,[0,0,0,0],[18,19,11,7],[19,5,5,20]],[[[58,"VSlighting01",[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{}],[[[{},"mainTexture",6,0]],11]]],0,0,[0,0],[11,7],[7,8]],[[[52,"readyAni"],[66,"readyAni",[-4,-5,-6,-7,-8,-9,-10,-11],[[12,-2,[2,"8ccGrWI/9KPqtArGwcL/p3"]],[75,-3,[2,"2di9kLD5pPF6Jpw7356sjL"],[17],18]],[1,"290V1ILjpOPZMX5mbbn9DO",null,null,null,-1,0]],[39,"left",1,[-13,-14,-15],[[12,-12,[2,"7exZdXuipIPZ/GapGVJOfv"]]],[1,"a2LDz/daZNF5XJanb2RW1j",null,null,null,1,0]],[39,"right",1,[-17,-18,-19],[[12,-16,[2,"caq8EdjmFCQp5t4zdYJlIX"]]],[1,"96Krjzs69EjZIqpB7nlTZj",null,null,null,1,0]],[37,"Particle",2,[[-20,[6,-21,[2,"d2mXdwQqxF3J/lh+8Uh7ZA"],[5,0,0]],[18,-22,[2,"4cVc2vuVBG3q+FPzWyzizL"]]],1,4,4],[1,"87zuTzX3pPzp1IG0J7vpDL",null,null,null,1,0],[1,-322.42,-80,0],[3,0.7071067811865475,0,0,0.7071067811865476],[1,90,0,0]],[64,"Particle-001",3,[[45,-23,[2,"54canlCJJDLqzqGbDtzlIb"],[[9,null],6,0],[7],[10,3,5,15],[0],[0],[10,3,10,40],[0],[0],[0],[0],[10,3,1.2,1.6],[0],[4,5],[0],[21,[7]],[47,true,60,140,0.3490658503988659,[4,1]],[33,true,[14,1,[11,[0,0.49743589743589745,1],[[20,2,3.069444444444444,1,3.069444444444444,1],[8,2,0.9925925925925926],[20,2,-2.225225225225225,1,-2.225225225225225,1]]]],[0],[0],[0]],[49,true,[46,1,120,[11,[0,0.24871794871794872,0.6794871794871795,1],[[48,2,-0.014814814814814814,1.8738738738738738,1.8738738738738738],[8,2,0.725925925925926],[8,2,-0.7925925925925926],[8,2,-0.029629629629629627]]]],[0],[0],[4,1]],[22,[0],[0],[0]],[23,[0],[0],[0],[0]],[24,[0],[0],[0]],[34,[14,1,[11,[0,1],[[8,2,1],[8,2,1]]]],[0]],[25],[88,[4,1],[0],[7],[7]],[26,10,11]],[6,-24,[2,"060wWIghVKhbz09nsgKbDv"],[5,0,0]],[18,-25,[2,"e6cPSYmqJBbYflrA12AB0I"]]],[1,"7fpWyZ+qNM5YL27YKrGSu4",null,null,null,1,0],[1,317.828,-80,0],[3,0.7071067811865475,0,0,0.7071067811865477],[1,89.99999999999999,0,0]],[16,"readyBg01",33554432,1,[[6,-26,[2,"4d65ez0PxDcZqB1om5PaIo"],[5,854,720]],[13,-27,[2,"33YZu0nBBCLItrNDP6DvSF"],0]],[1,"61Urq/Hs9IUrh5gsvQxmWC",null,null,null,1,0],[1,-373,0,0]],[16,"readyBg02",33554432,1,[[6,-28,[2,"derjrirfRFBqQUHaIBBI0w"],[5,876,720]],[13,-29,[2,"4545dxARNHYIr0SMPGHdRy"],1]],[1,"43BiEF9AtDWJ4Ec+Hc/3l+",null,null,null,1,0],[1,360,0,0]],[16,"readyLight03",33554432,2,[[6,-30,[2,"f7hn3ieQlPPoPKjPXM4F6Y"],[5,442,540]],[13,-31,[2,"07r6qu1lJAS43O5dmf/3hH"],2]],[1,"09r6w6SvFH0oV+8TNETyDE",null,null,null,1,0],[1,-325,90,0]],[16,"readyImg03",33554432,2,[[6,-32,[2,"4f/9iFNkZGBZo0cJBF+ogc"],[5,199,163]],[13,-33,[2,"e95rqZG8dNkb6ameKRBOpi"],3]],[1,"11uqlZGb1CB4d0mAbs+rqe",null,null,null,1,0],[1,-317.015,-48.411,0]],[16,"readyLight04",33554432,3,[[6,-34,[2,"f7AlVYqxVBtpYAwtZNwCwO"],[5,442,540]],[13,-35,[2,"bdJupqJv9MVLdaSxnhQbZl"],7]],[1,"bfhqW1Ur9JUqrnjiFSVdiJ",null,null,null,1,0],[1,325,90,0]],[16,"readyImg03",33554432,3,[[6,-36,[2,"056fx8QMdKRoHOt9pzTthA"],[5,199,163]],[13,-37,[2,"d0TE/seVBNZ5VMJZZs2+N8"],8]],[1,"deFAEerflMbr4bK9O4SDDg",null,null,null,1,0],[1,323.427,-49.108,0]],[16,"readyLight01",33554432,1,[[6,-38,[2,"94kT1GM/9ODrJkS0j8gnM4"],[5,143,720]],[13,-39,[2,"36I5vQXSxJfrgembpmv1m/"],12]],[1,"2dsJzFC0NFGbCm8qr1XZSR",null,null,null,1,0],[1,-11.198,0,0]],[41,"readyLine003",1,[[6,-40,[2,"1d98wzsTBIBL6rJY6VxyQL"],[5,1280,670]],[117,-41,[2,"64sft3N9FMspDl6bBYyVzz"],[4,4294440959],13,14]],[1,"11QF5CSfFH1p3/tdOiKvE0",null,null,null,1,0],[1,-20.206,-6.738,0],[3,0,0,0.6427876096865393,0.766044443118978],[1,1,0.76,1],[1,0,0,80]],[41,"readyLine002",1,[[6,-42,[2,"c3w0NLNmlCIIYX+rf3Ef5C"],[5,1280,134]],[73,-43,[2,"cdzwrmJBpD/7Q3ZWmnzL6B"],[4,4294967034],15]],[1,"4b7hZI9Z5CS5lFQIRZX2/T",null,null,null,1,0],[1,-36.458,-186.021,0],[3,0,0,0.6427876096865393,0.766044443118978],[1,1,0.15,1],[1,0,0,80]],[41,"readyLine004",1,[[6,-44,[2,"864Jg4BBtHZJytFoDXpCtL"],[5,1280,134]],[73,-45,[2,"72vwiod8BH5KcF+0085eF8"],[4,4294967034],16]],[1,"7eDMwmPXZD/6MalNEbc40z",null,null,null,1,0],[1,14.216,205.969,0],[3,0,0,0.6427876096865393,0.766044443118978],[1,1,0.15,1],[1,0,0,80]],[45,4,[2,"66+L5461BGHKlq/bHynnQt"],[[4,null],6,0],[7],[10,3,5,15],[0],[0],[10,3,10,40],[0],[0],[0],[0],[10,3,1.2,1.6],[0],[4,5],[0],[21,[7]],[47,true,60,140,0.3490658503988659,[4,1]],[33,true,[14,1,[11,[0,0.49743589743589745,1],[[20,2,3.069444444444444,1,3.069444444444444,1],[8,2,0.9925925925925926],[20,2,-2.225225225225225,1,-2.225225225225225,1]]]],[0],[0],[0]],[49,true,[46,1,120,[11,[0,0.24871794871794872,0.6794871794871795,1],[[48,2,-0.014814814814814814,1.8738738738738738,1.8738738738738738],[8,2,0.725925925925926],[8,2,-0.7925925925925926],[8,2,-0.029629629629629627]]]],[0],[0],[4,1]],[22,[0],[0],[0]],[23,[0],[0],[0],[0]],[24,[0],[0],[0]],[34,[14,1,[11,[0,1],[[8,2,1],[8,2,1]]]],[0]],[25],[35,[4,1],[0],[7],[7],-46],[26,5,6]]],0,[0,12,1,0,0,1,0,0,1,0,-1,6,0,-2,7,0,-3,2,0,-4,3,0,-5,12,0,-6,13,0,-7,14,0,-8,15,0,0,2,0,-1,8,0,-2,9,0,-3,4,0,0,3,0,-1,10,0,-2,11,0,-3,5,0,-1,16,0,0,4,0,0,4,0,0,5,0,0,5,0,0,5,0,0,6,0,0,6,0,0,7,0,0,7,0,0,8,0,0,8,0,0,9,0,0,9,0,0,10,0,0,10,0,0,11,0,0,11,0,0,12,0,0,12,0,0,13,0,0,13,0,0,14,0,0,14,0,0,15,0,0,15,0,9,16,0,14,1,46],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,2,2,-1,4,5,2,2,-1,4,5,2,23,2,2,2,-1,10],[36,9,3,2,0,0,1,3,2,0,0,1,37,38,39,21,21,22,22]],[[[51,"VSmodel2",2,[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{}]}}],[{"USE_TEXTURE":true,"USE_MASK_COLOR":true,"USE_TEXTURE_MOVE":true,"USE_NOISE_TEXTURE":true,"USE_NOISE_MOVE":true}],[[[{},"textureMoveSpeed",8,[0,0.6,0.1],"tilingOffset",8,[2,1.2,2,0,0],"maskTilingOffset",8,[2,1.5,1,-0.4,0],"noiseStrength",8,[0,0.1,0.1],"noiseMoveSpeed",8,[0,-0.3,0.1],"mainColor",8,[4,1023243337],"maskTexture",6,0,"noiseTexture",6,1,"mainTexture",6,2]],11]]],0,0,[0,0,0,0],[18,19,11,7],[19,5,5,20]],[[[52,"vsAni"],[66,"vsAni",[-4,-5,-6,-7,-8,-9,-10,-11],[[12,-2,[2,"718/HIM3BC1aaj5fwSo8EH"]],[75,-3,[2,"6ad7e9a0ZCRbQ71NpY1Qzh"],[18],19]],[1,"671nkB+5BIwqu3pAO/S/uC",null,null,null,-1,0]],[37,"SharpCircleKeep",1,[[-12,[6,-13,[2,"bfvh8wNpNE0aWtUDUov6rM"],[5,0,0]],[18,-14,[2,"99cwqVGjpHO6SwyeoHBlHP"]]],1,4,4],[1,"befx2P76ZEJYnNA1sy6sUE",null,null,null,1,0],[1,-13.085,0,0],[3,0,0,-0.08860745394904912,0.9960666238282795],[1,0,0,-10.167]],[37,"SharpCircle",1,[[-15,[6,-16,[2,"e08uLCJlBA15smS96c3k9W"],[5,0,0]],[18,-17,[2,"05D9vfTNxIU7RF7octo8eL"]]],1,4,4],[1,"25nH9Fs0pHHb2tiaFqwBk2",null,null,null,1,0],[1,-13.085,0,0],[3,0,0,-0.08860745394904912,0.9960666238282795],[1,0,0,-10.167]],[63,"VSlighting01",1,[[-18,[18,-19,[2,"82vIizNptPC6iEATJfpgbJ"]],[12,-20,[2,"49BRQFkmlJrL5S5OlyYBoq"]]],1,4,4],[1,"e1UPQZIdRMI5c9hu2xaYAV",null,null,null,1,0],[1,-110.073,20.023,0]],[63,"VSlighting02",1,[[-21,[18,-22,[2,"abcgWx8HRM8riE/3b4+7OX"]],[12,-23,[2,"5fne73eQBCI5Xc+BszkuRm"]]],1,4,4],[1,"90vj3OHSJLUovqU9jaW4PF",null,null,null,1,0],[1,77.177,26.349,0]],[100,"Plane002",1,[[92,-24,[2,"6a0G7P0UFAcblT24DTC5vU"],[12],[50],13],[18,-25,[2,"55ncqcN9NGy7BodMS14iAc"]],[12,-26,[2,"3c/fClKXtC2K7TJBimwNIQ"]]],[1,"4f0nQ9IPtLD5zWdoK5AdJC",null,null,null,1,0],[1,-490,0,0],[1,460,460,460]],[41,"Plane003",1,[[92,-27,[2,"c68ZB7cb9OzI2TrKcUtyMZ"],[14],[50],15],[18,-28,[2,"bc/hwkAt9Br5WNPO4SDQdr"]],[12,-29,[2,"08OAm5dbtAj79OZPQynHWH"]]],[1,"8eSplclQRJBq1e84gVQ+pL",null,null,null,1,0],[1,460,0,0],[3,0,0,1,6.123233995736766e-17],[1,460,460,460],[1,0,0,180]],[16,"readyS01",33554432,1,[[6,-30,[2,"44tU9rukhCNpG6klpmd5bi"],[5,145,80]],[13,-31,[2,"c3HlZgCXxClqo3HEuXc2ZV"],16]],[1,"aesv0r+uNL84DGzSUPR1Hx",null,null,null,1,0],[1,30.84699999999998,19.369000000000028,0]],[16,"readyV01",33554432,1,[[6,-32,[2,"3cNqSITflFhpBVHfbukp6h"],[5,132,97]],[13,-33,[2,"74Ri6t9rZEZbnQxS5z+du1"],17]],[1,"80YqfHb5ZOZKFDZo4vSB9T",null,null,null,1,0],[1,-48.78200000000004,27.25999999999999,0]],[121,200,0,2,[2,"35EjGY1BFC4q4yZQM3EQ3D"],[0],[78,2,[4,4288085960],[4,4294967205]],[10,3,12,14],[0],[0],[0],[0],[0],[0],[0],[10,3,0.8,1.2],[0],[4,80],[0],[21,[7]],[79,true,0,[4,1],[1,1,700,1]],[33,true,[14,1,[11,[0,1],[[82,2,1,-0.25870646766169125,1,-0.25870646766169125,1],[20,2,-1.8055555555555554,1,-1.8055555555555554,1]]]],[0],[0],[0]],[85,true,0,[10,3,260,-260],[0],[0],[4,1]],[22,[0],[0],[0]],[23,[0],[0],[0],[0]],[24,[0],[0],[0]],[34,[14,1,[11,[0,1],[[8,2,1],[8,2,1]]]],[0]],[25],[35,[4,1],[0],[7],[7],-34],[26,1,2]],[120,1,false,200,0,3,[2,"2fDfgbSURMlbe9nwCxv1u4"],[[3,null],6,0],[78,2,[4,4288085960],[4,4294967205]],[10,3,12,14],[0],[0],[0],[0],[0],[0],[0],[10,3,0.8,1.2],[0],[0],[0],[[57,[4,140]]],[21,[7]],[79,true,0,[4,1],[1,1,700,1]],[33,true,[14,1,[11,[0,1],[[82,2,1,-0.25870646766169125,1,-0.25870646766169125,1],[20,2,-1.8055555555555554,1,-1.8055555555555554,1]]]],[0],[0],[0]],[85,true,0,[10,3,260,-260],[0],[0],[4,1]],[22,[0],[0],[0]],[23,[0],[0],[0],[0]],[24,[0],[0],[0]],[34,[14,1,[11,[0,1],[[8,2,1],[8,2,1]]]],[0]],[25],[35,[4,1],[0],[7],[7],-35],[26,4,5]],[77,true,true,1.5,false,4,[2,"112NwUOUdM2Lv92Iu/oqL1"],[6],[7],[4,400],[4,400],[0],[0],[0],[0],[4,1.5707963267948966],[0],[4,0.7],[0],[0],[0],[[57,[4,1]]],[21,[7]],[80,1,0,1,[4,1]],[81,[0],[0],[0],[0]],[86,[0],[0],[0],[4,1]],[22,[0],[0],[0]],[23,[0],[0],[0],[0]],[24,[0],[0],[0]],[87,true,3,4,1,[14,1,[11,[0,1],[[83,1,1,1,1],[84,1,1,1,1,1]]]],[0]],[25],[35,[4,1],[0],[7],[7],-36],[26,7,8]],[77,true,true,1.5,false,5,[2,"56Vq+CCcBGiIZWaa8lJuYU"],[9],[7],[4,400],[4,400],[0],[0],[0],[0],[4,4.71238898038469],[0],[4,0.7],[0],[0],[0],[[57,[4,1]]],[21,[7]],[80,1,0,1,[4,1]],[81,[0],[0],[0],[0]],[86,[0],[0],[0],[4,1]],[22,[0],[0],[0]],[23,[0],[0],[0],[0]],[24,[0],[0],[0]],[87,true,3,4,1,[14,1,[11,[0,1],[[83,1,1,1,1],[84,1,1,1,1,1]]]],[0]],[25],[35,[4,1],[0],[7],[7],-37],[26,10,11]]],0,[0,12,1,0,0,1,0,0,1,0,-1,2,0,-2,3,0,-3,4,0,-4,5,0,-5,6,0,-6,7,0,-7,8,0,-8,9,0,-1,10,0,0,2,0,0,2,0,-1,11,0,0,3,0,0,3,0,-1,12,0,0,4,0,0,4,0,-1,13,0,0,5,0,0,5,0,0,6,0,0,6,0,0,6,0,0,7,0,0,7,0,0,7,0,0,8,0,0,8,0,0,9,0,0,9,0,9,10,0,9,11,0,9,12,0,9,13,0,14,1,37],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,4,5,-1,4,5,-1,4,5,-1,4,5,-1,13,-1,13,2,2,-1,10],[0,0,1,0,0,1,6,6,7,6,6,7,40,23,41,23,42,43,24,24]]]]
